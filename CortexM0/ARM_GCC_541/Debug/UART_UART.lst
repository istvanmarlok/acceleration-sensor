ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_skipStart
  20              		.data
  21              		.type	UART_skipStart, %object
  22              		.size	UART_skipStart, 1
  23              	UART_skipStart:
  24 0000 01       		.byte	1
  25              		.section	.text.UART_UartInit,"ax",%progbits
  26              		.align	2
  27              		.global	UART_UartInit
  28              		.code	16
  29              		.thumb_func
  30              		.type	UART_UartInit, %function
  31              	UART_UartInit:
  32              	.LFB1:
  33              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** 
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 2


  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_UART.c ****     };
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c **** 
  80:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 3


  82:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_UART.c ****     *
  84:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  85:Generated_Source\PSoC4/UART_UART.c ****     *
  86:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  87:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
  88:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  89:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  90:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  91:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_UART.c ****     *
  95:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_UART.c ****     *
  99:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_UART.c ****     {
 102:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_UART.c **** 
 104:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_UART.c ****         {
 106:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_UART.c ****         }
 108:Generated_Source\PSoC4/UART_UART.c ****         else
 109:Generated_Source\PSoC4/UART_UART.c ****         {
 110:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_UART.c **** 
 113:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_UART.c **** 
 119:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_UART.c **** 
 122:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_UART.c **** 
 127:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_UART.c **** 
 132:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_UART.c **** 
 137:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 4


 139:Generated_Source\PSoC4/UART_UART.c ****             {
 140:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 143:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_UART.c ****             }
 145:Generated_Source\PSoC4/UART_UART.c ****             else
 146:Generated_Source\PSoC4/UART_UART.c ****             {
 147:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_UART.c ****             }
 150:Generated_Source\PSoC4/UART_UART.c **** 
 151:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 153:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 154:Generated_Source\PSoC4/UART_UART.c **** 
 155:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_UART.c **** 
 158:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 163:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 164:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_UART.c **** 
 166:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_UART.c ****             {
 168:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_UART.c ****             }
 171:Generated_Source\PSoC4/UART_UART.c **** 
 172:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 174:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/UART_UART.c **** 
 178:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/UART_UART.c **** 
 182:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 185:Generated_Source\PSoC4/UART_UART.c **** 
 186:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_UART.c ****             {
 188:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_UART.c ****             }
 191:Generated_Source\PSoC4/UART_UART.c **** 
 192:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 5


 196:Generated_Source\PSoC4/UART_UART.c **** 
 197:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 200:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 201:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 202:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_UART.c **** 
 204:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_UART.c **** 
 209:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_UART.c **** 
 216:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_UART.c **** 
 224:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_UART.c **** 
 227:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_UART.c **** 
 232:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_UART.c ****         }
 236:Generated_Source\PSoC4/UART_UART.c ****     }
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c **** #else
 239:Generated_Source\PSoC4/UART_UART.c **** 
 240:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 242:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_UART.c ****     *
 246:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 248:Generated_Source\PSoC4/UART_UART.c ****     {
  34              		.loc 1 248 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 6


  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  44              		.loc 1 250 0
  45 0004 214B     		ldr	r3, .L2
  46 0006 224A     		ldr	r2, .L2+4
  47 0008 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/UART_UART.c **** 
 252:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  48              		.loc 1 253 0
  49 000a 224B     		ldr	r3, .L2+8
  50 000c 0022     		movs	r2, #0
  51 000e 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/UART_UART.c **** 
 255:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  52              		.loc 1 256 0
  53 0010 214B     		ldr	r3, .L2+12
  54 0012 224A     		ldr	r2, .L2+16
  55 0014 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  56              		.loc 1 257 0
  57 0016 224B     		ldr	r3, .L2+20
  58 0018 224A     		ldr	r2, .L2+24
  59 001a 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  60              		.loc 1 258 0
  61 001c 224B     		ldr	r3, .L2+28
  62 001e 0722     		movs	r2, #7
  63 0020 1A60     		str	r2, [r3]
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  64              		.loc 1 259 0
  65 0022 224B     		ldr	r3, .L2+32
  66 0024 0022     		movs	r2, #0
  67 0026 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART_UART.c **** 
 261:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  68              		.loc 1 262 0
  69 0028 214B     		ldr	r3, .L2+36
  70 002a 0122     		movs	r2, #1
  71 002c 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  72              		.loc 1 263 0
  73 002e 214B     		ldr	r3, .L2+40
  74 0030 1C4A     		ldr	r2, .L2+24
  75 0032 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  76              		.loc 1 264 0
  77 0034 204B     		ldr	r3, .L2+44
  78 0036 0022     		movs	r2, #0
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 7


  79 0038 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/UART_UART.c **** 
 266:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
  80              		.loc 1 267 0
  81 003a 204B     		ldr	r3, .L2+48
  82 003c 0422     		movs	r2, #4
  83 003e 1A60     		str	r2, [r3]
 268:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_UART.c **** 
 270:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 273:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 274:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 275:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_UART.c **** 
 277:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
  84              		.loc 1 279 0
  85 0040 0020     		movs	r0, #0
  86 0042 FFF7FEFF 		bl	CyIntDisable
 280:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
  87              		.loc 1 280 0
  88 0046 0021     		movs	r1, #0
  89 0048 0020     		movs	r0, #0
  90 004a FFF7FEFF 		bl	CyIntSetPriority
 281:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
  91              		.loc 1 281 0
  92 004e 1C4B     		ldr	r3, .L2+52
  93 0050 1900     		movs	r1, r3
  94 0052 0020     		movs	r0, #0
  95 0054 FFF7FEFF 		bl	CyIntSetVector
 282:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_UART.c **** 
 284:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  96              		.loc 1 285 0
  97 0058 1A4B     		ldr	r3, .L2+56
  98 005a 0022     		movs	r2, #0
  99 005c 1A60     		str	r2, [r3]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
 100              		.loc 1 286 0
 101 005e 1A4B     		ldr	r3, .L2+60
 102 0060 0022     		movs	r2, #0
 103 0062 1A60     		str	r2, [r3]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
 104              		.loc 1 287 0
 105 0064 194B     		ldr	r3, .L2+64
 106 0066 0022     		movs	r2, #0
 107 0068 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
 108              		.loc 1 288 0
 109 006a 194B     		ldr	r3, .L2+68
 110 006c 0022     		movs	r2, #0
 111 006e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 8


 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
 112              		.loc 1 289 0
 113 0070 184B     		ldr	r3, .L2+72
 114 0072 0022     		movs	r2, #0
 115 0074 1A60     		str	r2, [r3]
 290:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
 116              		.loc 1 290 0
 117 0076 184B     		ldr	r3, .L2+76
 118 0078 0022     		movs	r2, #0
 119 007a 1A60     		str	r2, [r3]
 291:Generated_Source\PSoC4/UART_UART.c **** 
 292:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 120              		.loc 1 293 0
 121 007c 164B     		ldr	r3, .L2+76
 122 007e 1B68     		ldr	r3, [r3]
 123 0080 9AB2     		uxth	r2, r3
 124 0082 164B     		ldr	r3, .L2+80
 125 0084 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/UART_UART.c **** 
 295:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 297:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_UART.c **** 
 301:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_UART.c ****     }
 126              		.loc 1 305 0
 127 0086 C046     		nop
 128 0088 BD46     		mov	sp, r7
 129              		@ sp needed
 130 008a 80BD     		pop	{r7, pc}
 131              	.L3:
 132              		.align	2
 133              	.L2:
 134 008c 00002640 		.word	1076232192
 135 0090 0F000002 		.word	33554447
 136 0094 40002640 		.word	1076232256
 137 0098 48002640 		.word	1076232264
 138 009c 01000A00 		.word	655361
 139 00a0 00032640 		.word	1076232960
 140 00a4 07000080 		.word	-2147483641
 141 00a8 04032640 		.word	1076232964
 142 00ac 10032640 		.word	1076232976
 143 00b0 44002640 		.word	1076232260
 144 00b4 00022640 		.word	1076232704
 145 00b8 04022640 		.word	1076232708
 146 00bc 50002640 		.word	1076232272
 147 00c0 00000000 		.word	UART_UART_WAKEUP_ISR
 148 00c4 880E2640 		.word	1076235912
 149 00c8 C80E2640 		.word	1076235976
 150 00cc 480F2640 		.word	1076236104
 151 00d0 080F2640 		.word	1076236040
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 9


 152 00d4 C80F2640 		.word	1076236232
 153 00d8 880F2640 		.word	1076236168
 154 00dc 00000000 		.word	UART_IntrTxMask
 155              		.cfi_endproc
 156              	.LFE1:
 157              		.size	UART_UartInit, .-UART_UartInit
 158              		.section	.text.UART_UartPostEnable,"ax",%progbits
 159              		.align	2
 160              		.global	UART_UartPostEnable
 161              		.code	16
 162              		.thumb_func
 163              		.type	UART_UartPostEnable, %function
 164              	UART_UartPostEnable:
 165              	.LFB2:
 306:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_UART.c **** 
 308:Generated_Source\PSoC4/UART_UART.c **** 
 309:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 311:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_UART.c **** *
 313:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_UART.c **** *
 316:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_UART.c **** {
 166              		.loc 1 318 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 319:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_UART.c ****         {
 323:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 326:Generated_Source\PSoC4/UART_UART.c ****         }
 327:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_UART.c **** 
 329:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 331:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_UART.c ****             {
 333:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_UART)
 336:Generated_Source\PSoC4/UART_UART.c ****             }
 337:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 10


 339:Generated_Source\PSoC4/UART_UART.c **** 
 340:Generated_Source\PSoC4/UART_UART.c **** #else
 341:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 176              		.loc 1 343 0
 177 0004 074B     		ldr	r3, .L5
 178 0006 074A     		ldr	r2, .L5
 179 0008 1268     		ldr	r2, [r2]
 180 000a F021     		movs	r1, #240
 181 000c 8A43     		bics	r2, r1
 182 000e 9021     		movs	r1, #144
 183 0010 0A43     		orrs	r2, r1
 184 0012 1A60     		str	r2, [r3]
 344:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_UART.c **** 
 347:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/UART_UART.c **** 
 354:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 185              		.loc 1 355 0
 186 0014 044B     		ldr	r3, .L5+4
 187 0016 054A     		ldr	r2, .L5+8
 188 0018 1288     		ldrh	r2, [r2]
 189 001a 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/UART_UART.c **** }
 190              		.loc 1 356 0
 191 001c C046     		nop
 192 001e BD46     		mov	sp, r7
 193              		@ sp needed
 194 0020 80BD     		pop	{r7, pc}
 195              	.L6:
 196 0022 C046     		.align	2
 197              	.L5:
 198 0024 00050240 		.word	1073874176
 199 0028 880F2640 		.word	1076236168
 200 002c 00000000 		.word	UART_IntrTxMask
 201              		.cfi_endproc
 202              	.LFE2:
 203              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 204              		.section	.text.UART_UartStop,"ax",%progbits
 205              		.align	2
 206              		.global	UART_UartStop
 207              		.code	16
 208              		.thumb_func
 209              		.type	UART_UartStop, %function
 210              	UART_UartStop:
 211              	.LFB3:
 357:Generated_Source\PSoC4/UART_UART.c **** 
 358:Generated_Source\PSoC4/UART_UART.c **** 
 359:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 11


 360:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 361:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_UART.c **** *
 363:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_UART.c **** *
 368:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 370:Generated_Source\PSoC4/UART_UART.c **** {
 212              		.loc 1 370 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 0000 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 00AF     		add	r7, sp, #0
 221              		.cfi_def_cfa_register 7
 371:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 374:Generated_Source\PSoC4/UART_UART.c ****         {
 375:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 378:Generated_Source\PSoC4/UART_UART.c ****         }
 379:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_UART.c **** 
 381:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 383:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_UART.c ****             {
 385:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_UART.c ****                 UART_uart_rts_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_UART.c **** 
 388:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_GPIO)
 391:Generated_Source\PSoC4/UART_UART.c ****             }
 392:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_UART.c **** 
 395:Generated_Source\PSoC4/UART_UART.c **** #else
 396:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 222              		.loc 1 398 0
 223 0004 0B4B     		ldr	r3, .L8
 224 0006 0B4A     		ldr	r2, .L8
 225 0008 1268     		ldr	r2, [r2]
 226 000a F021     		movs	r1, #240
 227 000c 8A43     		bics	r2, r1
 228 000e 1A60     		str	r2, [r3]
 399:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 12


 400:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_UART.c **** 
 402:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_UART.c **** 
 406:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_UART.c **** 
 413:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 229              		.loc 1 415 0
 230 0010 094B     		ldr	r3, .L8+4
 231 0012 094A     		ldr	r2, .L8+4
 232 0014 1268     		ldr	r2, [r2]
 233 0016 0949     		ldr	r1, .L8+8
 234 0018 0A40     		ands	r2, r1
 235 001a 1A60     		str	r2, [r3]
 416:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_UART.c **** 
 418:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 236              		.loc 1 419 0
 237 001c 084B     		ldr	r3, .L8+12
 238 001e 1B68     		ldr	r3, [r3]
 239 0020 9AB2     		uxth	r2, r3
 240 0022 E423     		movs	r3, #228
 241 0024 DB00     		lsls	r3, r3, #3
 242 0026 1340     		ands	r3, r2
 243 0028 9AB2     		uxth	r2, r3
 244 002a 064B     		ldr	r3, .L8+16
 245 002c 1A80     		strh	r2, [r3]
 420:Generated_Source\PSoC4/UART_UART.c **** }
 246              		.loc 1 420 0
 247 002e C046     		nop
 248 0030 BD46     		mov	sp, r7
 249              		@ sp needed
 250 0032 80BD     		pop	{r7, pc}
 251              	.L9:
 252              		.align	2
 253              	.L8:
 254 0034 00050240 		.word	1073874176
 255 0038 48002640 		.word	1076232264
 256 003c FFDFFFFF 		.word	-8193
 257 0040 880F2640 		.word	1076236168
 258 0044 00000000 		.word	UART_IntrTxMask
 259              		.cfi_endproc
 260              	.LFE3:
 261              		.size	UART_UartStop, .-UART_UartStop
 262              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 263              		.align	2
 264              		.global	UART_UartSetRxAddress
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 13


 265              		.code	16
 266              		.thumb_func
 267              		.type	UART_UartSetRxAddress, %function
 268              	UART_UartSetRxAddress:
 269              	.LFB4:
 421:Generated_Source\PSoC4/UART_UART.c **** 
 422:Generated_Source\PSoC4/UART_UART.c **** 
 423:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_UART.c **** *
 427:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_UART.c **** *
 432:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_UART.c **** {
 270              		.loc 1 434 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 16
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 84B0     		sub	sp, sp, #16
 279              		.cfi_def_cfa_offset 24
 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 435:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 283              		.loc 1 437 0
 284 0008 094B     		ldr	r3, .L11
 285 000a 1B68     		ldr	r3, [r3]
 286 000c FB60     		str	r3, [r7, #12]
 438:Generated_Source\PSoC4/UART_UART.c **** 
 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 287              		.loc 1 439 0
 288 000e FB68     		ldr	r3, [r7, #12]
 289 0010 FF22     		movs	r2, #255
 290 0012 9343     		bics	r3, r2
 291 0014 FB60     		str	r3, [r7, #12]
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 292              		.loc 1 440 0
 293 0016 7B68     		ldr	r3, [r7, #4]
 294 0018 FF22     		movs	r2, #255
 295 001a 1340     		ands	r3, r2
 296 001c FA68     		ldr	r2, [r7, #12]
 297 001e 1343     		orrs	r3, r2
 298 0020 FB60     		str	r3, [r7, #12]
 441:Generated_Source\PSoC4/UART_UART.c **** 
 442:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 299              		.loc 1 442 0
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 14


 300 0022 034B     		ldr	r3, .L11
 301 0024 FA68     		ldr	r2, [r7, #12]
 302 0026 1A60     		str	r2, [r3]
 443:Generated_Source\PSoC4/UART_UART.c **** }
 303              		.loc 1 443 0
 304 0028 C046     		nop
 305 002a BD46     		mov	sp, r7
 306 002c 04B0     		add	sp, sp, #16
 307              		@ sp needed
 308 002e 80BD     		pop	{r7, pc}
 309              	.L12:
 310              		.align	2
 311              	.L11:
 312 0030 10032640 		.word	1076232976
 313              		.cfi_endproc
 314              	.LFE4:
 315              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 316              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 317              		.align	2
 318              		.global	UART_UartSetRxAddressMask
 319              		.code	16
 320              		.thumb_func
 321              		.type	UART_UartSetRxAddressMask, %function
 322              	UART_UartSetRxAddressMask:
 323              	.LFB5:
 444:Generated_Source\PSoC4/UART_UART.c **** 
 445:Generated_Source\PSoC4/UART_UART.c **** 
 446:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_UART.c **** *
 452:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_UART.c **** *
 457:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_UART.c **** {
 324              		.loc 1 459 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 16
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 84B0     		sub	sp, sp, #16
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336 0006 7860     		str	r0, [r7, #4]
 460:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 15


 337              		.loc 1 462 0
 338 0008 094B     		ldr	r3, .L14
 339 000a 1B68     		ldr	r3, [r3]
 340 000c FB60     		str	r3, [r7, #12]
 463:Generated_Source\PSoC4/UART_UART.c **** 
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 341              		.loc 1 464 0
 342 000e FB68     		ldr	r3, [r7, #12]
 343 0010 084A     		ldr	r2, .L14+4
 344 0012 1340     		ands	r3, r2
 345 0014 FB60     		str	r3, [r7, #12]
 465:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 346              		.loc 1 465 0
 347 0016 7B68     		ldr	r3, [r7, #4]
 348 0018 1B04     		lsls	r3, r3, #16
 349 001a FA68     		ldr	r2, [r7, #12]
 350 001c 1343     		orrs	r3, r2
 351 001e FB60     		str	r3, [r7, #12]
 466:Generated_Source\PSoC4/UART_UART.c **** 
 467:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 352              		.loc 1 467 0
 353 0020 034B     		ldr	r3, .L14
 354 0022 FA68     		ldr	r2, [r7, #12]
 355 0024 1A60     		str	r2, [r3]
 468:Generated_Source\PSoC4/UART_UART.c **** }
 356              		.loc 1 468 0
 357 0026 C046     		nop
 358 0028 BD46     		mov	sp, r7
 359 002a 04B0     		add	sp, sp, #16
 360              		@ sp needed
 361 002c 80BD     		pop	{r7, pc}
 362              	.L15:
 363 002e C046     		.align	2
 364              	.L14:
 365 0030 10032640 		.word	1076232976
 366 0034 FFFF00FF 		.word	-16711681
 367              		.cfi_endproc
 368              	.LFE5:
 369              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 370              		.section	.text.UART_UartGetChar,"ax",%progbits
 371              		.align	2
 372              		.global	UART_UartGetChar
 373              		.code	16
 374              		.thumb_func
 375              		.type	UART_UartGetChar, %function
 376              	UART_UartGetChar:
 377              	.LFB6:
 469:Generated_Source\PSoC4/UART_UART.c **** 
 470:Generated_Source\PSoC4/UART_UART.c **** 
 471:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 474:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_UART.c ****     *
 476:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 16


 479:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_UART.c ****     *
 485:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_UART.c ****     *
 490:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_UART.c ****     *
 497:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_UART.c ****     {
 378              		.loc 1 499 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 8
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382 0000 80B5     		push	{r7, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 82B0     		sub	sp, sp, #8
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 390              		.loc 1 500 0
 391 0006 0023     		movs	r3, #0
 392 0008 7B60     		str	r3, [r7, #4]
 501:Generated_Source\PSoC4/UART_UART.c **** 
 502:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 393              		.loc 1 503 0
 394 000a FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 395 000e 031E     		subs	r3, r0, #0
 396 0010 03D0     		beq	.L17
 504:Generated_Source\PSoC4/UART_UART.c ****         {
 505:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 397              		.loc 1 505 0
 398 0012 FFF7FEFF 		bl	UART_SpiUartReadRxData
 399 0016 0300     		movs	r3, r0
 400 0018 7B60     		str	r3, [r7, #4]
 401              	.L17:
 506:Generated_Source\PSoC4/UART_UART.c ****         }
 507:Generated_Source\PSoC4/UART_UART.c **** 
 508:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 402              		.loc 1 508 0
 403 001a 084B     		ldr	r3, .L20
 404 001c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 17


 405 001e D823     		movs	r3, #216
 406 0020 9B00     		lsls	r3, r3, #2
 407 0022 1340     		ands	r3, r2
 408 0024 05D0     		beq	.L18
 509:Generated_Source\PSoC4/UART_UART.c ****         {
 510:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 409              		.loc 1 510 0
 410 0026 0023     		movs	r3, #0
 411 0028 7B60     		str	r3, [r7, #4]
 511:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 412              		.loc 1 511 0
 413 002a 044B     		ldr	r3, .L20
 414 002c D822     		movs	r2, #216
 415 002e 9200     		lsls	r2, r2, #2
 416 0030 1A60     		str	r2, [r3]
 417              	.L18:
 512:Generated_Source\PSoC4/UART_UART.c ****         }
 513:Generated_Source\PSoC4/UART_UART.c **** 
 514:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 418              		.loc 1 514 0
 419 0032 7B68     		ldr	r3, [r7, #4]
 515:Generated_Source\PSoC4/UART_UART.c ****     }
 420              		.loc 1 515 0
 421 0034 1800     		movs	r0, r3
 422 0036 BD46     		mov	sp, r7
 423 0038 02B0     		add	sp, sp, #8
 424              		@ sp needed
 425 003a 80BD     		pop	{r7, pc}
 426              	.L21:
 427              		.align	2
 428              	.L20:
 429 003c C00F2640 		.word	1076236224
 430              		.cfi_endproc
 431              	.LFE6:
 432              		.size	UART_UartGetChar, .-UART_UartGetChar
 433              		.section	.text.UART_UartGetByte,"ax",%progbits
 434              		.align	2
 435              		.global	UART_UartGetByte
 436              		.code	16
 437              		.thumb_func
 438              		.type	UART_UartGetByte, %function
 439              	UART_UartGetByte:
 440              	.LFB7:
 516:Generated_Source\PSoC4/UART_UART.c **** 
 517:Generated_Source\PSoC4/UART_UART.c **** 
 518:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_UART.c ****     *
 522:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_UART.c ****     *
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 18


 530:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_UART.c ****     *
 540:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_UART.c ****     *
 547:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_UART.c ****     {
 441              		.loc 1 549 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 80B5     		push	{r7, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 82B0     		sub	sp, sp, #8
 450              		.cfi_def_cfa_offset 16
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 550:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_UART.c **** 
 553:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_UART.c ****         {
 555:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 556:Generated_Source\PSoC4/UART_UART.c ****         }
 557:Generated_Source\PSoC4/UART_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_UART.c **** 
 559:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 453              		.loc 1 559 0
 454 0006 FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 455 000a 031E     		subs	r3, r0, #0
 456 000c 04D0     		beq	.L23
 560:Generated_Source\PSoC4/UART_UART.c ****         {
 561:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_UART.c ****             */
 564:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_UART.c ****             {
 566:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 567:Generated_Source\PSoC4/UART_UART.c ****             }
 568:Generated_Source\PSoC4/UART_UART.c ****             #endif
 569:Generated_Source\PSoC4/UART_UART.c **** 
 570:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 19


 571:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 457              		.loc 1 571 0
 458 000e FFF7FEFF 		bl	UART_SpiUartReadRxData
 459 0012 0300     		movs	r3, r0
 460 0014 7B60     		str	r3, [r7, #4]
 461 0016 02E0     		b	.L24
 462              	.L23:
 572:Generated_Source\PSoC4/UART_UART.c ****         }
 573:Generated_Source\PSoC4/UART_UART.c ****         else
 574:Generated_Source\PSoC4/UART_UART.c ****         {
 575:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_UART.c ****             */
 578:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 463              		.loc 1 578 0
 464 0018 0B4B     		ldr	r3, .L26
 465 001a 1B68     		ldr	r3, [r3]
 466 001c 7B60     		str	r3, [r7, #4]
 467              	.L24:
 579:Generated_Source\PSoC4/UART_UART.c **** 
 580:Generated_Source\PSoC4/UART_UART.c **** 
 581:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_UART.c ****             {
 584:Generated_Source\PSoC4/UART_UART.c **** 
 585:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/UART_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_UART.c **** 
 590:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 591:Generated_Source\PSoC4/UART_UART.c ****             }
 592:Generated_Source\PSoC4/UART_UART.c ****             #endif
 593:Generated_Source\PSoC4/UART_UART.c ****         }
 594:Generated_Source\PSoC4/UART_UART.c **** 
 595:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 468              		.loc 1 596 0
 469 001e 0B4B     		ldr	r3, .L26+4
 470 0020 1A68     		ldr	r2, [r3]
 471 0022 D823     		movs	r3, #216
 472 0024 9B00     		lsls	r3, r3, #2
 473 0026 1340     		ands	r3, r2
 474 0028 3B60     		str	r3, [r7]
 597:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 475              		.loc 1 597 0
 476 002a 084B     		ldr	r3, .L26+4
 477 002c D822     		movs	r2, #216
 478 002e 9200     		lsls	r2, r2, #2
 479 0030 1A60     		str	r2, [r3]
 598:Generated_Source\PSoC4/UART_UART.c **** 
 599:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/UART_UART.c ****         */
 602:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 480              		.loc 1 602 0
 481 0032 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 20


 482 0034 1B02     		lsls	r3, r3, #8
 483 0036 7A68     		ldr	r2, [r7, #4]
 484 0038 1343     		orrs	r3, r2
 485 003a 7B60     		str	r3, [r7, #4]
 603:Generated_Source\PSoC4/UART_UART.c **** 
 604:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 486              		.loc 1 604 0
 487 003c 7B68     		ldr	r3, [r7, #4]
 605:Generated_Source\PSoC4/UART_UART.c ****     }
 488              		.loc 1 605 0
 489 003e 1800     		movs	r0, r3
 490 0040 BD46     		mov	sp, r7
 491 0042 02B0     		add	sp, sp, #8
 492              		@ sp needed
 493 0044 80BD     		pop	{r7, pc}
 494              	.L27:
 495 0046 C046     		.align	2
 496              	.L26:
 497 0048 40032640 		.word	1076233024
 498 004c C00F2640 		.word	1076236224
 499              		.cfi_endproc
 500              	.LFE7:
 501              		.size	UART_UartGetByte, .-UART_UartGetByte
 502              		.section	.text.UART_UartSetRtsPolarity,"ax",%progbits
 503              		.align	2
 504              		.global	UART_UartSetRtsPolarity
 505              		.code	16
 506              		.thumb_func
 507              		.type	UART_UartSetRtsPolarity, %function
 508              	UART_UartSetRtsPolarity:
 509              	.LFB8:
 606:Generated_Source\PSoC4/UART_UART.c **** 
 607:Generated_Source\PSoC4/UART_UART.c **** 
 608:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_UART.c ****         *
 613:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_UART.c ****         *
 617:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_UART.c ****         *
 621:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****         {
 510              		.loc 1 623 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 8
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514 0000 80B5     		push	{r7, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 21


 518 0002 82B0     		sub	sp, sp, #8
 519              		.cfi_def_cfa_offset 16
 520 0004 00AF     		add	r7, sp, #0
 521              		.cfi_def_cfa_register 7
 522 0006 7860     		str	r0, [r7, #4]
 624:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 523              		.loc 1 624 0
 524 0008 7B68     		ldr	r3, [r7, #4]
 525 000a 002B     		cmp	r3, #0
 526 000c 07D0     		beq	.L29
 625:Generated_Source\PSoC4/UART_UART.c ****             {
 626:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 527              		.loc 1 626 0
 528 000e 094B     		ldr	r3, .L32
 529 0010 084A     		ldr	r2, .L32
 530 0012 1268     		ldr	r2, [r2]
 531 0014 8021     		movs	r1, #128
 532 0016 4902     		lsls	r1, r1, #9
 533 0018 0A43     		orrs	r2, r1
 534 001a 1A60     		str	r2, [r3]
 627:Generated_Source\PSoC4/UART_UART.c ****             }
 628:Generated_Source\PSoC4/UART_UART.c ****             else
 629:Generated_Source\PSoC4/UART_UART.c ****             {
 630:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_UART.c ****             }
 632:Generated_Source\PSoC4/UART_UART.c ****         }
 535              		.loc 1 632 0
 536 001c 05E0     		b	.L31
 537              	.L29:
 630:Generated_Source\PSoC4/UART_UART.c ****             }
 538              		.loc 1 630 0
 539 001e 054B     		ldr	r3, .L32
 540 0020 044A     		ldr	r2, .L32
 541 0022 1268     		ldr	r2, [r2]
 542 0024 0449     		ldr	r1, .L32+4
 543 0026 0A40     		ands	r2, r1
 544 0028 1A60     		str	r2, [r3]
 545              	.L31:
 546              		.loc 1 632 0
 547 002a C046     		nop
 548 002c BD46     		mov	sp, r7
 549 002e 02B0     		add	sp, sp, #8
 550              		@ sp needed
 551 0030 80BD     		pop	{r7, pc}
 552              	.L33:
 553 0032 C046     		.align	2
 554              	.L32:
 555 0034 50002640 		.word	1076232272
 556 0038 FFFFFEFF 		.word	-65537
 557              		.cfi_endproc
 558              	.LFE8:
 559              		.size	UART_UartSetRtsPolarity, .-UART_UartSetRtsPolarity
 560              		.section	.text.UART_UartSetRtsFifoLevel,"ax",%progbits
 561              		.align	2
 562              		.global	UART_UartSetRtsFifoLevel
 563              		.code	16
 564              		.thumb_func
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 22


 565              		.type	UART_UartSetRtsFifoLevel, %function
 566              	UART_UartSetRtsFifoLevel:
 567              	.LFB9:
 633:Generated_Source\PSoC4/UART_UART.c **** 
 634:Generated_Source\PSoC4/UART_UART.c **** 
 635:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_UART.c ****         *
 639:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_UART.c ****         *
 645:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_UART.c ****         *
 649:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_UART.c ****         {
 568              		.loc 1 651 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 16
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572 0000 80B5     		push	{r7, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 84B0     		sub	sp, sp, #16
 577              		.cfi_def_cfa_offset 24
 578 0004 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 580 0006 7860     		str	r0, [r7, #4]
 652:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 581              		.loc 1 654 0
 582 0008 094B     		ldr	r3, .L35
 583 000a 1B68     		ldr	r3, [r3]
 584 000c FB60     		str	r3, [r7, #12]
 655:Generated_Source\PSoC4/UART_UART.c **** 
 656:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 585              		.loc 1 656 0
 586 000e FB68     		ldr	r3, [r7, #12]
 587 0010 0F22     		movs	r2, #15
 588 0012 9343     		bics	r3, r2
 589 0014 FB60     		str	r3, [r7, #12]
 657:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 590              		.loc 1 657 0
 591 0016 7B68     		ldr	r3, [r7, #4]
 592 0018 0F22     		movs	r2, #15
 593 001a 1340     		ands	r3, r2
 594 001c FA68     		ldr	r2, [r7, #12]
 595 001e 1343     		orrs	r3, r2
 596 0020 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 23


 658:Generated_Source\PSoC4/UART_UART.c **** 
 659:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 597              		.loc 1 659 0
 598 0022 034B     		ldr	r3, .L35
 599 0024 FA68     		ldr	r2, [r7, #12]
 600 0026 1A60     		str	r2, [r3]
 660:Generated_Source\PSoC4/UART_UART.c ****         }
 601              		.loc 1 660 0
 602 0028 C046     		nop
 603 002a BD46     		mov	sp, r7
 604 002c 04B0     		add	sp, sp, #16
 605              		@ sp needed
 606 002e 80BD     		pop	{r7, pc}
 607              	.L36:
 608              		.align	2
 609              	.L35:
 610 0030 50002640 		.word	1076232272
 611              		.cfi_endproc
 612              	.LFE9:
 613              		.size	UART_UartSetRtsFifoLevel, .-UART_UartSetRtsFifoLevel
 614              		.section	.text.UART_UartPutString,"ax",%progbits
 615              		.align	2
 616              		.global	UART_UartPutString
 617              		.code	16
 618              		.thumb_func
 619              		.type	UART_UartPutString, %function
 620              	UART_UartPutString:
 621              	.LFB10:
 661:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_UART.c **** 
 665:Generated_Source\PSoC4/UART_UART.c **** 
 666:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_UART.c ****     *
 671:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_UART.c ****     *
 676:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_UART.c ****     *
 679:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_UART.c ****     {
 622              		.loc 1 681 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 16
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 80B5     		push	{r7, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 24


 630 0002 84B0     		sub	sp, sp, #16
 631              		.cfi_def_cfa_offset 24
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 682:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 635              		.loc 1 684 0
 636 0008 0023     		movs	r3, #0
 637 000a FB60     		str	r3, [r7, #12]
 685:Generated_Source\PSoC4/UART_UART.c **** 
 686:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 638              		.loc 1 687 0
 639 000c 09E0     		b	.L38
 640              	.L39:
 688:Generated_Source\PSoC4/UART_UART.c ****         {
 689:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 641              		.loc 1 689 0
 642 000e 7A68     		ldr	r2, [r7, #4]
 643 0010 FB68     		ldr	r3, [r7, #12]
 644 0012 D318     		adds	r3, r2, r3
 645 0014 1B78     		ldrb	r3, [r3]
 646 0016 1800     		movs	r0, r3
 647 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 690:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 648              		.loc 1 690 0
 649 001c FB68     		ldr	r3, [r7, #12]
 650 001e 0133     		adds	r3, r3, #1
 651 0020 FB60     		str	r3, [r7, #12]
 652              	.L38:
 687:Generated_Source\PSoC4/UART_UART.c ****         {
 653              		.loc 1 687 0
 654 0022 7A68     		ldr	r2, [r7, #4]
 655 0024 FB68     		ldr	r3, [r7, #12]
 656 0026 D318     		adds	r3, r2, r3
 657 0028 1B78     		ldrb	r3, [r3]
 658 002a 002B     		cmp	r3, #0
 659 002c EFD1     		bne	.L39
 691:Generated_Source\PSoC4/UART_UART.c ****         }
 692:Generated_Source\PSoC4/UART_UART.c ****     }
 660              		.loc 1 692 0
 661 002e C046     		nop
 662 0030 BD46     		mov	sp, r7
 663 0032 04B0     		add	sp, sp, #16
 664              		@ sp needed
 665 0034 80BD     		pop	{r7, pc}
 666              		.cfi_endproc
 667              	.LFE10:
 668              		.size	UART_UartPutString, .-UART_UartPutString
 669 0036 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 670              		.align	2
 671              		.global	UART_UartPutCRLF
 672              		.code	16
 673              		.thumb_func
 674              		.type	UART_UartPutCRLF, %function
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 25


 675              	UART_UartPutCRLF:
 676              	.LFB11:
 693:Generated_Source\PSoC4/UART_UART.c **** 
 694:Generated_Source\PSoC4/UART_UART.c **** 
 695:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 697:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_UART.c ****     *
 699:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_UART.c ****     *
 706:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_UART.c ****     {
 677              		.loc 1 708 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 690              		.loc 1 709 0
 691 0008 7B68     		ldr	r3, [r7, #4]
 692 000a 1800     		movs	r0, r3
 693 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
 710:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 694              		.loc 1 710 0
 695 0010 0D20     		movs	r0, #13
 696 0012 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 711:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 697              		.loc 1 711 0
 698 0016 0A20     		movs	r0, #10
 699 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 712:Generated_Source\PSoC4/UART_UART.c ****     }
 700              		.loc 1 712 0
 701 001c C046     		nop
 702 001e BD46     		mov	sp, r7
 703 0020 02B0     		add	sp, sp, #8
 704              		@ sp needed
 705 0022 80BD     		pop	{r7, pc}
 706              		.cfi_endproc
 707              	.LFE11:
 708              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 709              		.section	.text.UART_UartEnableCts,"ax",%progbits
 710              		.align	2
 711              		.global	UART_UartEnableCts
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 26


 712              		.code	16
 713              		.thumb_func
 714              		.type	UART_UartEnableCts, %function
 715              	UART_UartEnableCts:
 716              	.LFB12:
 713:Generated_Source\PSoC4/UART_UART.c **** 
 714:Generated_Source\PSoC4/UART_UART.c **** 
 715:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/UART_UART.c ****         *
 720:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_UART.c ****         *
 724:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_UART.c ****         {
 717              		.loc 1 726 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721 0000 80B5     		push	{r7, lr}
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 00AF     		add	r7, sp, #0
 726              		.cfi_def_cfa_register 7
 727:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 727              		.loc 1 727 0
 728 0004 044B     		ldr	r3, .L42
 729 0006 044A     		ldr	r2, .L42
 730 0008 1268     		ldr	r2, [r2]
 731 000a 8021     		movs	r1, #128
 732 000c 8904     		lsls	r1, r1, #18
 733 000e 0A43     		orrs	r2, r1
 734 0010 1A60     		str	r2, [r3]
 728:Generated_Source\PSoC4/UART_UART.c ****         }
 735              		.loc 1 728 0
 736 0012 C046     		nop
 737 0014 BD46     		mov	sp, r7
 738              		@ sp needed
 739 0016 80BD     		pop	{r7, pc}
 740              	.L43:
 741              		.align	2
 742              	.L42:
 743 0018 50002640 		.word	1076232272
 744              		.cfi_endproc
 745              	.LFE12:
 746              		.size	UART_UartEnableCts, .-UART_UartEnableCts
 747              		.section	.text.UART_UartDisableCts,"ax",%progbits
 748              		.align	2
 749              		.global	UART_UartDisableCts
 750              		.code	16
 751              		.thumb_func
 752              		.type	UART_UartDisableCts, %function
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 27


 753              	UART_UartDisableCts:
 754              	.LFB13:
 729:Generated_Source\PSoC4/UART_UART.c **** 
 730:Generated_Source\PSoC4/UART_UART.c **** 
 731:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 733:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_UART.c ****         *
 735:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_UART.c ****         *
 739:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_UART.c ****         {
 755              		.loc 1 741 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 742:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 765              		.loc 1 742 0
 766 0004 044B     		ldr	r3, .L45
 767 0006 044A     		ldr	r2, .L45
 768 0008 1268     		ldr	r2, [r2]
 769 000a 0449     		ldr	r1, .L45+4
 770 000c 0A40     		ands	r2, r1
 771 000e 1A60     		str	r2, [r3]
 743:Generated_Source\PSoC4/UART_UART.c ****         }
 772              		.loc 1 743 0
 773 0010 C046     		nop
 774 0012 BD46     		mov	sp, r7
 775              		@ sp needed
 776 0014 80BD     		pop	{r7, pc}
 777              	.L46:
 778 0016 C046     		.align	2
 779              	.L45:
 780 0018 50002640 		.word	1076232272
 781 001c FFFFFFFD 		.word	-33554433
 782              		.cfi_endproc
 783              	.LFE13:
 784              		.size	UART_UartDisableCts, .-UART_UartDisableCts
 785              		.section	.text.UART_UartSetCtsPolarity,"ax",%progbits
 786              		.align	2
 787              		.global	UART_UartSetCtsPolarity
 788              		.code	16
 789              		.thumb_func
 790              		.type	UART_UartSetCtsPolarity, %function
 791              	UART_UartSetCtsPolarity:
 792              	.LFB14:
 744:Generated_Source\PSoC4/UART_UART.c **** 
 745:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 28


 746:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_UART.c ****         *
 750:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_UART.c ****         *
 754:Generated_Source\PSoC4/UART_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/UART_UART.c ****         *
 759:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_UART.c ****         {
 793              		.loc 1 761 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 8
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 80B5     		push	{r7, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 82B0     		sub	sp, sp, #8
 802              		.cfi_def_cfa_offset 16
 803 0004 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 762:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 806              		.loc 1 762 0
 807 0008 7B68     		ldr	r3, [r7, #4]
 808 000a 002B     		cmp	r3, #0
 809 000c 07D0     		beq	.L48
 763:Generated_Source\PSoC4/UART_UART.c ****             {
 764:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 810              		.loc 1 764 0
 811 000e 094B     		ldr	r3, .L51
 812 0010 084A     		ldr	r2, .L51
 813 0012 1268     		ldr	r2, [r2]
 814 0014 8021     		movs	r1, #128
 815 0016 4904     		lsls	r1, r1, #17
 816 0018 0A43     		orrs	r2, r1
 817 001a 1A60     		str	r2, [r3]
 765:Generated_Source\PSoC4/UART_UART.c ****             }
 766:Generated_Source\PSoC4/UART_UART.c ****             else
 767:Generated_Source\PSoC4/UART_UART.c ****             {
 768:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 769:Generated_Source\PSoC4/UART_UART.c ****             }
 770:Generated_Source\PSoC4/UART_UART.c ****         }
 818              		.loc 1 770 0
 819 001c 05E0     		b	.L50
 820              	.L48:
 768:Generated_Source\PSoC4/UART_UART.c ****             }
 821              		.loc 1 768 0
 822 001e 054B     		ldr	r3, .L51
 823 0020 044A     		ldr	r2, .L51
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 29


 824 0022 1268     		ldr	r2, [r2]
 825 0024 0449     		ldr	r1, .L51+4
 826 0026 0A40     		ands	r2, r1
 827 0028 1A60     		str	r2, [r3]
 828              	.L50:
 829              		.loc 1 770 0
 830 002a C046     		nop
 831 002c BD46     		mov	sp, r7
 832 002e 02B0     		add	sp, sp, #8
 833              		@ sp needed
 834 0030 80BD     		pop	{r7, pc}
 835              	.L52:
 836 0032 C046     		.align	2
 837              	.L51:
 838 0034 50002640 		.word	1076232272
 839 0038 FFFFFFFE 		.word	-16777217
 840              		.cfi_endproc
 841              	.LFE14:
 842              		.size	UART_UartSetCtsPolarity, .-UART_UartSetCtsPolarity
 843              		.section	.text.UART_UartSendBreakBlocking,"ax",%progbits
 844              		.align	2
 845              		.global	UART_UartSendBreakBlocking
 846              		.code	16
 847              		.thumb_func
 848              		.type	UART_UartSendBreakBlocking, %function
 849              	UART_UartSendBreakBlocking:
 850              	.LFB15:
 771:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_UART.c **** 
 773:Generated_Source\PSoC4/UART_UART.c **** 
 774:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_UART.c ****     *
 778:Generated_Source\PSoC4/UART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_UART.c ****     *
 782:Generated_Source\PSoC4/UART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_UART.c ****     *
 785:Generated_Source\PSoC4/UART_UART.c ****     * \note
 786:Generated_Source\PSoC4/UART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_UART.c ****     *
 789:Generated_Source\PSoC4/UART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_UART.c ****     *
 793:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_UART.c ****     {
 851              		.loc 1 795 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 16
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 30


 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 84B0     		sub	sp, sp, #16
 860              		.cfi_def_cfa_offset 24
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 796:Generated_Source\PSoC4/UART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_UART.c **** 
 799:Generated_Source\PSoC4/UART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_UART.c ****         txIntrReg = UART_GetTxInterruptMode();
 864              		.loc 1 800 0
 865 0008 174B     		ldr	r3, .L55
 866 000a 1B68     		ldr	r3, [r3]
 867 000c FB60     		str	r3, [r7, #12]
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 868              		.loc 1 801 0
 869 000e 164B     		ldr	r3, .L55
 870 0010 0022     		movs	r2, #0
 871 0012 1A60     		str	r2, [r3]
 802:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 872              		.loc 1 802 0
 873 0014 154B     		ldr	r3, .L55+4
 874 0016 8022     		movs	r2, #128
 875 0018 9200     		lsls	r2, r2, #2
 876 001a 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/UART_UART.c **** 
 804:Generated_Source\PSoC4/UART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_UART.c ****         txCtrlReg = UART_TX_CTRL_REG;
 877              		.loc 1 805 0
 878 001c 144B     		ldr	r3, .L55+8
 879 001e 1B68     		ldr	r3, [r3]
 880 0020 BB60     		str	r3, [r7, #8]
 806:Generated_Source\PSoC4/UART_UART.c **** 
 807:Generated_Source\PSoC4/UART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = (UART_TX_CTRL_REG & (uint32) ~UART_TX_CTRL_DATA_WIDTH_MASK) |
 881              		.loc 1 808 0
 882 0022 134B     		ldr	r3, .L55+8
 883 0024 124A     		ldr	r2, .L55+8
 884 0026 1268     		ldr	r2, [r2]
 885 0028 0F21     		movs	r1, #15
 886 002a 8A43     		bics	r2, r1
 887 002c 1100     		movs	r1, r2
 809:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 888              		.loc 1 809 0
 889 002e 7A68     		ldr	r2, [r7, #4]
 890 0030 013A     		subs	r2, r2, #1
 891 0032 0F20     		movs	r0, #15
 892 0034 0240     		ands	r2, r0
 808:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 893              		.loc 1 808 0
 894 0036 0A43     		orrs	r2, r1
 895 0038 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART_UART.c **** 
 811:Generated_Source\PSoC4/UART_UART.c ****         /* Generate break */
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 31


 812:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_WR_REG = 0u;
 896              		.loc 1 812 0
 897 003a 0E4B     		ldr	r3, .L55+12
 898 003c 0022     		movs	r2, #0
 899 003e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC4/UART_UART.c **** 
 814:Generated_Source\PSoC4/UART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_UART.c ****         while (0u == (UART_GetTxInterruptSource() & UART_INTR_TX_UART_DONE))
 900              		.loc 1 815 0
 901 0040 C046     		nop
 902              	.L54:
 903              		.loc 1 815 0 is_stmt 0 discriminator 1
 904 0042 0A4B     		ldr	r3, .L55+4
 905 0044 1A68     		ldr	r2, [r3]
 906 0046 8023     		movs	r3, #128
 907 0048 9B00     		lsls	r3, r3, #2
 908 004a 1340     		ands	r3, r2
 909 004c F9D0     		beq	.L54
 816:Generated_Source\PSoC4/UART_UART.c ****         {
 817:Generated_Source\PSoC4/UART_UART.c ****         }
 818:Generated_Source\PSoC4/UART_UART.c **** 
 819:Generated_Source\PSoC4/UART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 910              		.loc 1 820 0 is_stmt 1
 911 004e 074B     		ldr	r3, .L55+4
 912 0050 094A     		ldr	r2, .L55+16
 913 0052 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/UART_UART.c **** 
 822:Generated_Source\PSoC4/UART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = txCtrlReg;
 914              		.loc 1 823 0
 915 0054 064B     		ldr	r3, .L55+8
 916 0056 BA68     		ldr	r2, [r7, #8]
 917 0058 1A60     		str	r2, [r3]
 824:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 918              		.loc 1 824 0
 919 005a 034B     		ldr	r3, .L55
 920 005c FA68     		ldr	r2, [r7, #12]
 921 005e 1A60     		str	r2, [r3]
 825:Generated_Source\PSoC4/UART_UART.c ****     }
 922              		.loc 1 825 0
 923 0060 C046     		nop
 924 0062 BD46     		mov	sp, r7
 925 0064 04B0     		add	sp, sp, #16
 926              		@ sp needed
 927 0066 80BD     		pop	{r7, pc}
 928              	.L56:
 929              		.align	2
 930              	.L55:
 931 0068 880F2640 		.word	1076236168
 932 006c 800F2640 		.word	1076236160
 933 0070 00022640 		.word	1076232704
 934 0074 40022640 		.word	1076232768
 935 0078 F3070000 		.word	2035
 936              		.cfi_endproc
 937              	.LFE15:
 938              		.size	UART_UartSendBreakBlocking, .-UART_UartSendBreakBlocking
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 32


 939              		.section	.text.UART_UartSaveConfig,"ax",%progbits
 940              		.align	2
 941              		.global	UART_UartSaveConfig
 942              		.code	16
 943              		.thumb_func
 944              		.type	UART_UartSaveConfig, %function
 945              	UART_UartSaveConfig:
 946              	.LFB16:
 826:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_TX_DIRECTION) */
 827:Generated_Source\PSoC4/UART_UART.c **** 
 828:Generated_Source\PSoC4/UART_UART.c **** 
 829:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 830:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 831:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSaveConfig
 832:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 833:Generated_Source\PSoC4/UART_UART.c ****     *
 834:Generated_Source\PSoC4/UART_UART.c ****     *  Clears and enables an interrupt on a falling edge of the Rx input. The GPIO
 835:Generated_Source\PSoC4/UART_UART.c ****     *  interrupt does not track in the active mode, therefore requires to be
 836:Generated_Source\PSoC4/UART_UART.c ****     *  cleared by this API.
 837:Generated_Source\PSoC4/UART_UART.c ****     *
 838:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 839:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSaveConfig(void)
 840:Generated_Source\PSoC4/UART_UART.c ****     {
 947              		.loc 1 840 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 841:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RX_WAKEUP_IRQ)
 842:Generated_Source\PSoC4/UART_UART.c ****         /* Set SKIP_START if requested (set by default). */
 843:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_skipStart)
 957              		.loc 1 843 0
 958 0004 0E4B     		ldr	r3, .L60
 959 0006 1B78     		ldrb	r3, [r3]
 960 0008 002B     		cmp	r3, #0
 961 000a 07D0     		beq	.L58
 844:Generated_Source\PSoC4/UART_UART.c ****         {
 845:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG |= (uint32)  UART_UART_RX_CTRL_SKIP_START;
 962              		.loc 1 845 0
 963 000c 0D4B     		ldr	r3, .L60+4
 964 000e 0D4A     		ldr	r2, .L60+4
 965 0010 1268     		ldr	r2, [r2]
 966 0012 8021     		movs	r1, #128
 967 0014 8901     		lsls	r1, r1, #6
 968 0016 0A43     		orrs	r2, r1
 969 0018 1A60     		str	r2, [r3]
 970 001a 05E0     		b	.L59
 971              	.L58:
 846:Generated_Source\PSoC4/UART_UART.c ****         }
 847:Generated_Source\PSoC4/UART_UART.c ****         else
 848:Generated_Source\PSoC4/UART_UART.c ****         {
 849:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 33


 972              		.loc 1 849 0
 973 001c 094B     		ldr	r3, .L60+4
 974 001e 094A     		ldr	r2, .L60+4
 975 0020 1268     		ldr	r2, [r2]
 976 0022 0949     		ldr	r1, .L60+8
 977 0024 0A40     		ands	r2, r1
 978 0026 1A60     		str	r2, [r3]
 979              	.L59:
 850:Generated_Source\PSoC4/UART_UART.c ****         }
 851:Generated_Source\PSoC4/UART_UART.c **** 
 852:Generated_Source\PSoC4/UART_UART.c ****         /* Clear RX GPIO interrupt status and pending interrupt in NVIC because
 853:Generated_Source\PSoC4/UART_UART.c ****         * falling edge on RX line occurs while UART communication in active mode.
 854:Generated_Source\PSoC4/UART_UART.c ****         * Enable interrupt: next interrupt trigger should wakeup device.
 855:Generated_Source\PSoC4/UART_UART.c ****         */
 856:Generated_Source\PSoC4/UART_UART.c ****         UART_CLEAR_UART_RX_WAKE_INTR;
 980              		.loc 1 856 0
 981 0028 FFF7FEFF 		bl	UART_rx_wake_ClearInterrupt
 857:Generated_Source\PSoC4/UART_UART.c ****         UART_RxWakeClearPendingInt();
 982              		.loc 1 857 0
 983 002c 0020     		movs	r0, #0
 984 002e FFF7FEFF 		bl	CyIntClearPending
 858:Generated_Source\PSoC4/UART_UART.c ****         UART_RxWakeEnableInt();
 985              		.loc 1 858 0
 986 0032 0020     		movs	r0, #0
 987 0034 FFF7FEFF 		bl	CyIntEnable
 859:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 860:Generated_Source\PSoC4/UART_UART.c ****     }
 988              		.loc 1 860 0
 989 0038 C046     		nop
 990 003a BD46     		mov	sp, r7
 991              		@ sp needed
 992 003c 80BD     		pop	{r7, pc}
 993              	.L61:
 994 003e C046     		.align	2
 995              	.L60:
 996 0040 00000000 		.word	UART_skipStart
 997 0044 48002640 		.word	1076232264
 998 0048 FFDFFFFF 		.word	-8193
 999              		.cfi_endproc
 1000              	.LFE16:
 1001              		.size	UART_UartSaveConfig, .-UART_UartSaveConfig
 1002              		.section	.text.UART_UartRestoreConfig,"ax",%progbits
 1003              		.align	2
 1004              		.global	UART_UartRestoreConfig
 1005              		.code	16
 1006              		.thumb_func
 1007              		.type	UART_UartRestoreConfig, %function
 1008              	UART_UartRestoreConfig:
 1009              	.LFB17:
 861:Generated_Source\PSoC4/UART_UART.c **** 
 862:Generated_Source\PSoC4/UART_UART.c **** 
 863:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartRestoreConfig
 865:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 866:Generated_Source\PSoC4/UART_UART.c ****     *
 867:Generated_Source\PSoC4/UART_UART.c ****     *  Disables the RX GPIO interrupt. Until this function is called the interrupt
 868:Generated_Source\PSoC4/UART_UART.c ****     *  remains active and triggers on every falling edge of the UART RX line.
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 34


 869:Generated_Source\PSoC4/UART_UART.c ****     *
 870:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 871:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartRestoreConfig(void)
 872:Generated_Source\PSoC4/UART_UART.c ****     {
 1010              		.loc 1 872 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 873:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RX_WAKEUP_IRQ)
 874:Generated_Source\PSoC4/UART_UART.c ****         /* Disable interrupt: no more triggers in active mode */
 875:Generated_Source\PSoC4/UART_UART.c ****         UART_RxWakeDisableInt();
 1020              		.loc 1 875 0
 1021 0004 0020     		movs	r0, #0
 1022 0006 FFF7FEFF 		bl	CyIntDisable
 876:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 877:Generated_Source\PSoC4/UART_UART.c ****     }
 1023              		.loc 1 877 0
 1024 000a C046     		nop
 1025 000c BD46     		mov	sp, r7
 1026              		@ sp needed
 1027 000e 80BD     		pop	{r7, pc}
 1028              		.cfi_endproc
 1029              	.LFE17:
 1030              		.size	UART_UartRestoreConfig, .-UART_UartRestoreConfig
 1031              		.section	.text.UART_UART_WAKEUP_ISR,"ax",%progbits
 1032              		.align	2
 1033              		.global	UART_UART_WAKEUP_ISR
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	UART_UART_WAKEUP_ISR, %function
 1037              	UART_UART_WAKEUP_ISR:
 1038              	.LFB18:
 878:Generated_Source\PSoC4/UART_UART.c **** 
 879:Generated_Source\PSoC4/UART_UART.c **** 
 880:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RX_WAKEUP_IRQ)
 881:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 882:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UART_WAKEUP_ISR
 883:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 884:Generated_Source\PSoC4/UART_UART.c ****         *
 885:Generated_Source\PSoC4/UART_UART.c ****         *  Handles the Interrupt Service Routine for the SCB UART mode GPIO wakeup
 886:Generated_Source\PSoC4/UART_UART.c ****         *  event. This event is configured to trigger on a falling edge of the RX line.
 887:Generated_Source\PSoC4/UART_UART.c ****         *
 888:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 889:Generated_Source\PSoC4/UART_UART.c ****         CY_ISR(UART_UART_WAKEUP_ISR)
 890:Generated_Source\PSoC4/UART_UART.c ****         {
 1039              		.loc 1 890 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 35


 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 891:Generated_Source\PSoC4/UART_UART.c ****         #ifdef UART_UART_WAKEUP_ISR_ENTRY_CALLBACK
 892:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_WAKEUP_ISR_EntryCallback();
 893:Generated_Source\PSoC4/UART_UART.c ****         #endif /* UART_UART_WAKEUP_ISR_ENTRY_CALLBACK */
 894:Generated_Source\PSoC4/UART_UART.c **** 
 895:Generated_Source\PSoC4/UART_UART.c ****             UART_CLEAR_UART_RX_WAKE_INTR;
 1049              		.loc 1 895 0
 1050 0004 FFF7FEFF 		bl	UART_rx_wake_ClearInterrupt
 896:Generated_Source\PSoC4/UART_UART.c **** 
 897:Generated_Source\PSoC4/UART_UART.c ****         #ifdef UART_UART_WAKEUP_ISR_EXIT_CALLBACK
 898:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_WAKEUP_ISR_ExitCallback();
 899:Generated_Source\PSoC4/UART_UART.c ****         #endif /* UART_UART_WAKEUP_ISR_EXIT_CALLBACK */
 900:Generated_Source\PSoC4/UART_UART.c ****         }
 1051              		.loc 1 900 0
 1052 0008 C046     		nop
 1053 000a BD46     		mov	sp, r7
 1054              		@ sp needed
 1055 000c 80BD     		pop	{r7, pc}
 1056              		.cfi_endproc
 1057              	.LFE18:
 1058              		.size	UART_UART_WAKEUP_ISR, .-UART_UART_WAKEUP_ISR
 1059 000e C046     		.text
 1060              	.Letext0:
 1061              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1062              		.file 3 "Generated_Source\\PSoC4\\UART_PVT.h"
 1063              		.section	.debug_info,"",%progbits
 1064              	.Ldebug_info0:
 1065 0000 6F030000 		.4byte	0x36f
 1066 0004 0400     		.2byte	0x4
 1067 0006 00000000 		.4byte	.Ldebug_abbrev0
 1068 000a 04       		.byte	0x4
 1069 000b 01       		.uleb128 0x1
 1070 000c B0010000 		.4byte	.LASF53
 1071 0010 0C       		.byte	0xc
 1072 0011 4B000000 		.4byte	.LASF54
 1073 0015 0E000000 		.4byte	.LASF55
 1074 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1075 001d 00000000 		.4byte	0
 1076 0021 00000000 		.4byte	.Ldebug_line0
 1077 0025 02       		.uleb128 0x2
 1078 0026 01       		.byte	0x1
 1079 0027 06       		.byte	0x6
 1080 0028 90030000 		.4byte	.LASF0
 1081 002c 02       		.uleb128 0x2
 1082 002d 01       		.byte	0x1
 1083 002e 08       		.byte	0x8
 1084 002f 27010000 		.4byte	.LASF1
 1085 0033 02       		.uleb128 0x2
 1086 0034 02       		.byte	0x2
 1087 0035 05       		.byte	0x5
 1088 0036 40030000 		.4byte	.LASF2
 1089 003a 02       		.uleb128 0x2
 1090 003b 02       		.byte	0x2
 1091 003c 07       		.byte	0x7
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 36


 1092 003d CA000000 		.4byte	.LASF3
 1093 0041 02       		.uleb128 0x2
 1094 0042 04       		.byte	0x4
 1095 0043 05       		.byte	0x5
 1096 0044 62030000 		.4byte	.LASF4
 1097 0048 02       		.uleb128 0x2
 1098 0049 04       		.byte	0x4
 1099 004a 07       		.byte	0x7
 1100 004b 68010000 		.4byte	.LASF5
 1101 004f 02       		.uleb128 0x2
 1102 0050 08       		.byte	0x8
 1103 0051 05       		.byte	0x5
 1104 0052 00000000 		.4byte	.LASF6
 1105 0056 02       		.uleb128 0x2
 1106 0057 08       		.byte	0x8
 1107 0058 07       		.byte	0x7
 1108 0059 A8020000 		.4byte	.LASF7
 1109 005d 03       		.uleb128 0x3
 1110 005e 04       		.byte	0x4
 1111 005f 05       		.byte	0x5
 1112 0060 696E7400 		.ascii	"int\000"
 1113 0064 02       		.uleb128 0x2
 1114 0065 04       		.byte	0x4
 1115 0066 07       		.byte	0x7
 1116 0067 85020000 		.4byte	.LASF8
 1117 006b 04       		.uleb128 0x4
 1118 006c 88010000 		.4byte	.LASF9
 1119 0070 02       		.byte	0x2
 1120 0071 D201     		.2byte	0x1d2
 1121 0073 2C000000 		.4byte	0x2c
 1122 0077 04       		.uleb128 0x4
 1123 0078 77020000 		.4byte	.LASF10
 1124 007c 02       		.byte	0x2
 1125 007d D301     		.2byte	0x1d3
 1126 007f 3A000000 		.4byte	0x3a
 1127 0083 04       		.uleb128 0x4
 1128 0084 7E020000 		.4byte	.LASF11
 1129 0088 02       		.byte	0x2
 1130 0089 D401     		.2byte	0x1d4
 1131 008b 48000000 		.4byte	0x48
 1132 008f 02       		.uleb128 0x2
 1133 0090 04       		.byte	0x4
 1134 0091 04       		.byte	0x4
 1135 0092 8A030000 		.4byte	.LASF12
 1136 0096 02       		.uleb128 0x2
 1137 0097 08       		.byte	0x8
 1138 0098 04       		.byte	0x4
 1139 0099 51020000 		.4byte	.LASF13
 1140 009d 04       		.uleb128 0x4
 1141 009e 4E010000 		.4byte	.LASF14
 1142 00a2 02       		.byte	0x2
 1143 00a3 E301     		.2byte	0x1e3
 1144 00a5 A9000000 		.4byte	0xa9
 1145 00a9 02       		.uleb128 0x2
 1146 00aa 01       		.byte	0x1
 1147 00ab 08       		.byte	0x8
 1148 00ac 2C030000 		.4byte	.LASF15
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 37


 1149 00b0 04       		.uleb128 0x4
 1150 00b1 45000000 		.4byte	.LASF16
 1151 00b5 02       		.byte	0x2
 1152 00b6 7E02     		.2byte	0x27e
 1153 00b8 BC000000 		.4byte	0xbc
 1154 00bc 05       		.uleb128 0x5
 1155 00bd 83000000 		.4byte	0x83
 1156 00c1 02       		.uleb128 0x2
 1157 00c2 08       		.byte	0x8
 1158 00c3 04       		.byte	0x4
 1159 00c4 7E030000 		.4byte	.LASF17
 1160 00c8 02       		.uleb128 0x2
 1161 00c9 04       		.byte	0x4
 1162 00ca 07       		.byte	0x7
 1163 00cb 05030000 		.4byte	.LASF18
 1164 00cf 06       		.uleb128 0x6
 1165 00d0 92020000 		.4byte	.LASF19
 1166 00d4 01       		.byte	0x1
 1167 00d5 F7       		.byte	0xf7
 1168 00d6 00000000 		.4byte	.LFB1
 1169 00da E0000000 		.4byte	.LFE1-.LFB1
 1170 00de 01       		.uleb128 0x1
 1171 00df 9C       		.byte	0x9c
 1172 00e0 07       		.uleb128 0x7
 1173 00e1 54010000 		.4byte	.LASF20
 1174 00e5 01       		.byte	0x1
 1175 00e6 3D01     		.2byte	0x13d
 1176 00e8 00000000 		.4byte	.LFB2
 1177 00ec 30000000 		.4byte	.LFE2-.LFB2
 1178 00f0 01       		.uleb128 0x1
 1179 00f1 9C       		.byte	0x9c
 1180 00f2 07       		.uleb128 0x7
 1181 00f3 7A010000 		.4byte	.LASF21
 1182 00f7 01       		.byte	0x1
 1183 00f8 7101     		.2byte	0x171
 1184 00fa 00000000 		.4byte	.LFB3
 1185 00fe 48000000 		.4byte	.LFE3-.LFB3
 1186 0102 01       		.uleb128 0x1
 1187 0103 9C       		.byte	0x9c
 1188 0104 08       		.uleb128 0x8
 1189 0105 58020000 		.4byte	.LASF22
 1190 0109 01       		.byte	0x1
 1191 010a B101     		.2byte	0x1b1
 1192 010c 00000000 		.4byte	.LFB4
 1193 0110 34000000 		.4byte	.LFE4-.LFB4
 1194 0114 01       		.uleb128 0x1
 1195 0115 9C       		.byte	0x9c
 1196 0116 39010000 		.4byte	0x139
 1197 011a 09       		.uleb128 0x9
 1198 011b A0020000 		.4byte	.LASF24
 1199 011f 01       		.byte	0x1
 1200 0120 B101     		.2byte	0x1b1
 1201 0122 83000000 		.4byte	0x83
 1202 0126 02       		.uleb128 0x2
 1203 0127 91       		.byte	0x91
 1204 0128 6C       		.sleb128 -20
 1205 0129 0A       		.uleb128 0xa
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 38


 1206 012a 75030000 		.4byte	.LASF26
 1207 012e 01       		.byte	0x1
 1208 012f B301     		.2byte	0x1b3
 1209 0131 83000000 		.4byte	0x83
 1210 0135 02       		.uleb128 0x2
 1211 0136 91       		.byte	0x91
 1212 0137 74       		.sleb128 -12
 1213 0138 00       		.byte	0
 1214 0139 08       		.uleb128 0x8
 1215 013a 7E000000 		.4byte	.LASF23
 1216 013e 01       		.byte	0x1
 1217 013f CA01     		.2byte	0x1ca
 1218 0141 00000000 		.4byte	.LFB5
 1219 0145 38000000 		.4byte	.LFE5-.LFB5
 1220 0149 01       		.uleb128 0x1
 1221 014a 9C       		.byte	0x9c
 1222 014b 6E010000 		.4byte	0x16e
 1223 014f 09       		.uleb128 0x9
 1224 0150 45020000 		.4byte	.LASF25
 1225 0154 01       		.byte	0x1
 1226 0155 CA01     		.2byte	0x1ca
 1227 0157 83000000 		.4byte	0x83
 1228 015b 02       		.uleb128 0x2
 1229 015c 91       		.byte	0x91
 1230 015d 6C       		.sleb128 -20
 1231 015e 0A       		.uleb128 0xa
 1232 015f 75030000 		.4byte	.LASF26
 1233 0163 01       		.byte	0x1
 1234 0164 CC01     		.2byte	0x1cc
 1235 0166 83000000 		.4byte	0x83
 1236 016a 02       		.uleb128 0x2
 1237 016b 91       		.byte	0x91
 1238 016c 74       		.sleb128 -12
 1239 016d 00       		.byte	0
 1240 016e 0B       		.uleb128 0xb
 1241 016f F4020000 		.4byte	.LASF28
 1242 0173 01       		.byte	0x1
 1243 0174 F201     		.2byte	0x1f2
 1244 0176 83000000 		.4byte	0x83
 1245 017a 00000000 		.4byte	.LFB6
 1246 017e 40000000 		.4byte	.LFE6-.LFB6
 1247 0182 01       		.uleb128 0x1
 1248 0183 9C       		.byte	0x9c
 1249 0184 98010000 		.4byte	0x198
 1250 0188 0A       		.uleb128 0xa
 1251 0189 3E020000 		.4byte	.LASF27
 1252 018d 01       		.byte	0x1
 1253 018e F401     		.2byte	0x1f4
 1254 0190 83000000 		.4byte	0x83
 1255 0194 02       		.uleb128 0x2
 1256 0195 91       		.byte	0x91
 1257 0196 74       		.sleb128 -12
 1258 0197 00       		.byte	0
 1259 0198 0B       		.uleb128 0xb
 1260 0199 9F010000 		.4byte	.LASF29
 1261 019d 01       		.byte	0x1
 1262 019e 2402     		.2byte	0x224
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 39


 1263 01a0 83000000 		.4byte	0x83
 1264 01a4 00000000 		.4byte	.LFB7
 1265 01a8 50000000 		.4byte	.LFE7-.LFB7
 1266 01ac 01       		.uleb128 0x1
 1267 01ad 9C       		.byte	0x9c
 1268 01ae D1010000 		.4byte	0x1d1
 1269 01b2 0A       		.uleb128 0xa
 1270 01b3 3E020000 		.4byte	.LASF27
 1271 01b7 01       		.byte	0x1
 1272 01b8 2602     		.2byte	0x226
 1273 01ba 83000000 		.4byte	0x83
 1274 01be 02       		.uleb128 0x2
 1275 01bf 91       		.byte	0x91
 1276 01c0 74       		.sleb128 -12
 1277 01c1 0A       		.uleb128 0xa
 1278 01c2 6B030000 		.4byte	.LASF30
 1279 01c6 01       		.byte	0x1
 1280 01c7 2702     		.2byte	0x227
 1281 01c9 83000000 		.4byte	0x83
 1282 01cd 02       		.uleb128 0x2
 1283 01ce 91       		.byte	0x91
 1284 01cf 70       		.sleb128 -16
 1285 01d0 00       		.byte	0
 1286 01d1 08       		.uleb128 0x8
 1287 01d2 B2000000 		.4byte	.LASF31
 1288 01d6 01       		.byte	0x1
 1289 01d7 6E02     		.2byte	0x26e
 1290 01d9 00000000 		.4byte	.LFB8
 1291 01dd 3C000000 		.4byte	.LFE8-.LFB8
 1292 01e1 01       		.uleb128 0x1
 1293 01e2 9C       		.byte	0x9c
 1294 01e3 F7010000 		.4byte	0x1f7
 1295 01e7 09       		.uleb128 0x9
 1296 01e8 6E020000 		.4byte	.LASF32
 1297 01ec 01       		.byte	0x1
 1298 01ed 6E02     		.2byte	0x26e
 1299 01ef 83000000 		.4byte	0x83
 1300 01f3 02       		.uleb128 0x2
 1301 01f4 91       		.byte	0x91
 1302 01f5 74       		.sleb128 -12
 1303 01f6 00       		.byte	0
 1304 01f7 08       		.uleb128 0x8
 1305 01f8 35010000 		.4byte	.LASF33
 1306 01fc 01       		.byte	0x1
 1307 01fd 8A02     		.2byte	0x28a
 1308 01ff 00000000 		.4byte	.LFB9
 1309 0203 34000000 		.4byte	.LFE9-.LFB9
 1310 0207 01       		.uleb128 0x1
 1311 0208 9C       		.byte	0x9c
 1312 0209 2C020000 		.4byte	0x22c
 1313 020d 09       		.uleb128 0x9
 1314 020e 98000000 		.4byte	.LASF34
 1315 0212 01       		.byte	0x1
 1316 0213 8A02     		.2byte	0x28a
 1317 0215 83000000 		.4byte	0x83
 1318 0219 02       		.uleb128 0x2
 1319 021a 91       		.byte	0x91
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 40


 1320 021b 6C       		.sleb128 -20
 1321 021c 0A       		.uleb128 0xa
 1322 021d BA030000 		.4byte	.LASF35
 1323 0221 01       		.byte	0x1
 1324 0222 8C02     		.2byte	0x28c
 1325 0224 83000000 		.4byte	0x83
 1326 0228 02       		.uleb128 0x2
 1327 0229 91       		.byte	0x91
 1328 022a 74       		.sleb128 -12
 1329 022b 00       		.byte	0
 1330 022c 0C       		.uleb128 0xc
 1331 022d E4000000 		.4byte	.LASF36
 1332 0231 01       		.byte	0x1
 1333 0232 A802     		.2byte	0x2a8
 1334 0234 00000000 		.4byte	.LFB10
 1335 0238 36000000 		.4byte	.LFE10-.LFB10
 1336 023c 01       		.uleb128 0x1
 1337 023d 9C       		.byte	0x9c
 1338 023e 61020000 		.4byte	0x261
 1339 0242 09       		.uleb128 0x9
 1340 0243 DD000000 		.4byte	.LASF37
 1341 0247 01       		.byte	0x1
 1342 0248 A802     		.2byte	0x2a8
 1343 024a 61020000 		.4byte	0x261
 1344 024e 02       		.uleb128 0x2
 1345 024f 91       		.byte	0x91
 1346 0250 6C       		.sleb128 -20
 1347 0251 0A       		.uleb128 0xa
 1348 0252 EB020000 		.4byte	.LASF38
 1349 0256 01       		.byte	0x1
 1350 0257 AA02     		.2byte	0x2aa
 1351 0259 83000000 		.4byte	0x83
 1352 025d 02       		.uleb128 0x2
 1353 025e 91       		.byte	0x91
 1354 025f 74       		.sleb128 -12
 1355 0260 00       		.byte	0
 1356 0261 0D       		.uleb128 0xd
 1357 0262 04       		.byte	0x4
 1358 0263 67020000 		.4byte	0x267
 1359 0267 0E       		.uleb128 0xe
 1360 0268 9D000000 		.4byte	0x9d
 1361 026c 0C       		.uleb128 0xc
 1362 026d 8E010000 		.4byte	.LASF39
 1363 0271 01       		.byte	0x1
 1364 0272 C302     		.2byte	0x2c3
 1365 0274 00000000 		.4byte	.LFB11
 1366 0278 24000000 		.4byte	.LFE11-.LFB11
 1367 027c 01       		.uleb128 0x1
 1368 027d 9C       		.byte	0x9c
 1369 027e 92020000 		.4byte	0x292
 1370 0282 09       		.uleb128 0x9
 1371 0283 0E030000 		.4byte	.LASF40
 1372 0287 01       		.byte	0x1
 1373 0288 C302     		.2byte	0x2c3
 1374 028a 83000000 		.4byte	0x83
 1375 028e 02       		.uleb128 0x2
 1376 028f 91       		.byte	0x91
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 41


 1377 0290 74       		.sleb128 -12
 1378 0291 00       		.byte	0
 1379 0292 07       		.uleb128 0x7
 1380 0293 19030000 		.4byte	.LASF41
 1381 0297 01       		.byte	0x1
 1382 0298 D502     		.2byte	0x2d5
 1383 029a 00000000 		.4byte	.LFB12
 1384 029e 1C000000 		.4byte	.LFE12-.LFB12
 1385 02a2 01       		.uleb128 0x1
 1386 02a3 9C       		.byte	0x9c
 1387 02a4 07       		.uleb128 0x7
 1388 02a5 9E000000 		.4byte	.LASF42
 1389 02a9 01       		.byte	0x1
 1390 02aa E402     		.2byte	0x2e4
 1391 02ac 00000000 		.4byte	.LFB13
 1392 02b0 20000000 		.4byte	.LFE13-.LFB13
 1393 02b4 01       		.uleb128 0x1
 1394 02b5 9C       		.byte	0x9c
 1395 02b6 08       		.uleb128 0x8
 1396 02b7 4A030000 		.4byte	.LASF43
 1397 02bb 01       		.byte	0x1
 1398 02bc F802     		.2byte	0x2f8
 1399 02be 00000000 		.4byte	.LFB14
 1400 02c2 3C000000 		.4byte	.LFE14-.LFB14
 1401 02c6 01       		.uleb128 0x1
 1402 02c7 9C       		.byte	0x9c
 1403 02c8 DC020000 		.4byte	0x2dc
 1404 02cc 09       		.uleb128 0x9
 1405 02cd 6E020000 		.4byte	.LASF32
 1406 02d1 01       		.byte	0x1
 1407 02d2 F802     		.2byte	0x2f8
 1408 02d4 83000000 		.4byte	0x83
 1409 02d8 02       		.uleb128 0x2
 1410 02d9 91       		.byte	0x91
 1411 02da 74       		.sleb128 -12
 1412 02db 00       		.byte	0
 1413 02dc 08       		.uleb128 0x8
 1414 02dd 02010000 		.4byte	.LASF44
 1415 02e1 01       		.byte	0x1
 1416 02e2 1A03     		.2byte	0x31a
 1417 02e4 00000000 		.4byte	.LFB15
 1418 02e8 7C000000 		.4byte	.LFE15-.LFB15
 1419 02ec 01       		.uleb128 0x1
 1420 02ed 9C       		.byte	0x9c
 1421 02ee 20030000 		.4byte	0x320
 1422 02f2 09       		.uleb128 0x9
 1423 02f3 F7000000 		.4byte	.LASF45
 1424 02f7 01       		.byte	0x1
 1425 02f8 1A03     		.2byte	0x31a
 1426 02fa 83000000 		.4byte	0x83
 1427 02fe 02       		.uleb128 0x2
 1428 02ff 91       		.byte	0x91
 1429 0300 6C       		.sleb128 -20
 1430 0301 0A       		.uleb128 0xa
 1431 0302 B0030000 		.4byte	.LASF46
 1432 0306 01       		.byte	0x1
 1433 0307 1C03     		.2byte	0x31c
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 42


 1434 0309 83000000 		.4byte	0x83
 1435 030d 02       		.uleb128 0x2
 1436 030e 91       		.byte	0x91
 1437 030f 70       		.sleb128 -16
 1438 0310 0A       		.uleb128 0xa
 1439 0311 1D010000 		.4byte	.LASF47
 1440 0315 01       		.byte	0x1
 1441 0316 1D03     		.2byte	0x31d
 1442 0318 83000000 		.4byte	0x83
 1443 031c 02       		.uleb128 0x2
 1444 031d 91       		.byte	0x91
 1445 031e 74       		.sleb128 -12
 1446 031f 00       		.byte	0
 1447 0320 0F       		.uleb128 0xf
 1448 0321 9C030000 		.4byte	.LASF48
 1449 0325 01       		.byte	0x1
 1450 0326 4703     		.2byte	0x347
 1451 0328 00000000 		.4byte	.LFB16
 1452 032c 4C000000 		.4byte	.LFE16-.LFB16
 1453 0330 01       		.uleb128 0x1
 1454 0331 9C       		.byte	0x9c
 1455 0332 0F       		.uleb128 0xf
 1456 0333 D4020000 		.4byte	.LASF49
 1457 0337 01       		.byte	0x1
 1458 0338 6703     		.2byte	0x367
 1459 033a 00000000 		.4byte	.LFB17
 1460 033e 10000000 		.4byte	.LFE17-.LFB17
 1461 0342 01       		.uleb128 0x1
 1462 0343 9C       		.byte	0x9c
 1463 0344 0F       		.uleb128 0xf
 1464 0345 BF020000 		.4byte	.LASF50
 1465 0349 01       		.byte	0x1
 1466 034a 7903     		.2byte	0x379
 1467 034c 00000000 		.4byte	.LFB18
 1468 0350 0E000000 		.4byte	.LFE18-.LFB18
 1469 0354 01       		.uleb128 0x1
 1470 0355 9C       		.byte	0x9c
 1471 0356 10       		.uleb128 0x10
 1472 0357 6E000000 		.4byte	.LASF51
 1473 035b 03       		.byte	0x3
 1474 035c 5B       		.byte	0x5b
 1475 035d 77000000 		.4byte	0x77
 1476 0361 11       		.uleb128 0x11
 1477 0362 31030000 		.4byte	.LASF52
 1478 0366 01       		.byte	0x1
 1479 0367 21       		.byte	0x21
 1480 0368 6B000000 		.4byte	0x6b
 1481 036c 05       		.uleb128 0x5
 1482 036d 03       		.byte	0x3
 1483 036e 00000000 		.4byte	UART_skipStart
 1484 0372 00       		.byte	0
 1485              		.section	.debug_abbrev,"",%progbits
 1486              	.Ldebug_abbrev0:
 1487 0000 01       		.uleb128 0x1
 1488 0001 11       		.uleb128 0x11
 1489 0002 01       		.byte	0x1
 1490 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 43


 1491 0004 0E       		.uleb128 0xe
 1492 0005 13       		.uleb128 0x13
 1493 0006 0B       		.uleb128 0xb
 1494 0007 03       		.uleb128 0x3
 1495 0008 0E       		.uleb128 0xe
 1496 0009 1B       		.uleb128 0x1b
 1497 000a 0E       		.uleb128 0xe
 1498 000b 55       		.uleb128 0x55
 1499 000c 17       		.uleb128 0x17
 1500 000d 11       		.uleb128 0x11
 1501 000e 01       		.uleb128 0x1
 1502 000f 10       		.uleb128 0x10
 1503 0010 17       		.uleb128 0x17
 1504 0011 00       		.byte	0
 1505 0012 00       		.byte	0
 1506 0013 02       		.uleb128 0x2
 1507 0014 24       		.uleb128 0x24
 1508 0015 00       		.byte	0
 1509 0016 0B       		.uleb128 0xb
 1510 0017 0B       		.uleb128 0xb
 1511 0018 3E       		.uleb128 0x3e
 1512 0019 0B       		.uleb128 0xb
 1513 001a 03       		.uleb128 0x3
 1514 001b 0E       		.uleb128 0xe
 1515 001c 00       		.byte	0
 1516 001d 00       		.byte	0
 1517 001e 03       		.uleb128 0x3
 1518 001f 24       		.uleb128 0x24
 1519 0020 00       		.byte	0
 1520 0021 0B       		.uleb128 0xb
 1521 0022 0B       		.uleb128 0xb
 1522 0023 3E       		.uleb128 0x3e
 1523 0024 0B       		.uleb128 0xb
 1524 0025 03       		.uleb128 0x3
 1525 0026 08       		.uleb128 0x8
 1526 0027 00       		.byte	0
 1527 0028 00       		.byte	0
 1528 0029 04       		.uleb128 0x4
 1529 002a 16       		.uleb128 0x16
 1530 002b 00       		.byte	0
 1531 002c 03       		.uleb128 0x3
 1532 002d 0E       		.uleb128 0xe
 1533 002e 3A       		.uleb128 0x3a
 1534 002f 0B       		.uleb128 0xb
 1535 0030 3B       		.uleb128 0x3b
 1536 0031 05       		.uleb128 0x5
 1537 0032 49       		.uleb128 0x49
 1538 0033 13       		.uleb128 0x13
 1539 0034 00       		.byte	0
 1540 0035 00       		.byte	0
 1541 0036 05       		.uleb128 0x5
 1542 0037 35       		.uleb128 0x35
 1543 0038 00       		.byte	0
 1544 0039 49       		.uleb128 0x49
 1545 003a 13       		.uleb128 0x13
 1546 003b 00       		.byte	0
 1547 003c 00       		.byte	0
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 44


 1548 003d 06       		.uleb128 0x6
 1549 003e 2E       		.uleb128 0x2e
 1550 003f 00       		.byte	0
 1551 0040 3F       		.uleb128 0x3f
 1552 0041 19       		.uleb128 0x19
 1553 0042 03       		.uleb128 0x3
 1554 0043 0E       		.uleb128 0xe
 1555 0044 3A       		.uleb128 0x3a
 1556 0045 0B       		.uleb128 0xb
 1557 0046 3B       		.uleb128 0x3b
 1558 0047 0B       		.uleb128 0xb
 1559 0048 27       		.uleb128 0x27
 1560 0049 19       		.uleb128 0x19
 1561 004a 11       		.uleb128 0x11
 1562 004b 01       		.uleb128 0x1
 1563 004c 12       		.uleb128 0x12
 1564 004d 06       		.uleb128 0x6
 1565 004e 40       		.uleb128 0x40
 1566 004f 18       		.uleb128 0x18
 1567 0050 9642     		.uleb128 0x2116
 1568 0052 19       		.uleb128 0x19
 1569 0053 00       		.byte	0
 1570 0054 00       		.byte	0
 1571 0055 07       		.uleb128 0x7
 1572 0056 2E       		.uleb128 0x2e
 1573 0057 00       		.byte	0
 1574 0058 3F       		.uleb128 0x3f
 1575 0059 19       		.uleb128 0x19
 1576 005a 03       		.uleb128 0x3
 1577 005b 0E       		.uleb128 0xe
 1578 005c 3A       		.uleb128 0x3a
 1579 005d 0B       		.uleb128 0xb
 1580 005e 3B       		.uleb128 0x3b
 1581 005f 05       		.uleb128 0x5
 1582 0060 27       		.uleb128 0x27
 1583 0061 19       		.uleb128 0x19
 1584 0062 11       		.uleb128 0x11
 1585 0063 01       		.uleb128 0x1
 1586 0064 12       		.uleb128 0x12
 1587 0065 06       		.uleb128 0x6
 1588 0066 40       		.uleb128 0x40
 1589 0067 18       		.uleb128 0x18
 1590 0068 9742     		.uleb128 0x2117
 1591 006a 19       		.uleb128 0x19
 1592 006b 00       		.byte	0
 1593 006c 00       		.byte	0
 1594 006d 08       		.uleb128 0x8
 1595 006e 2E       		.uleb128 0x2e
 1596 006f 01       		.byte	0x1
 1597 0070 3F       		.uleb128 0x3f
 1598 0071 19       		.uleb128 0x19
 1599 0072 03       		.uleb128 0x3
 1600 0073 0E       		.uleb128 0xe
 1601 0074 3A       		.uleb128 0x3a
 1602 0075 0B       		.uleb128 0xb
 1603 0076 3B       		.uleb128 0x3b
 1604 0077 05       		.uleb128 0x5
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 45


 1605 0078 27       		.uleb128 0x27
 1606 0079 19       		.uleb128 0x19
 1607 007a 11       		.uleb128 0x11
 1608 007b 01       		.uleb128 0x1
 1609 007c 12       		.uleb128 0x12
 1610 007d 06       		.uleb128 0x6
 1611 007e 40       		.uleb128 0x40
 1612 007f 18       		.uleb128 0x18
 1613 0080 9742     		.uleb128 0x2117
 1614 0082 19       		.uleb128 0x19
 1615 0083 01       		.uleb128 0x1
 1616 0084 13       		.uleb128 0x13
 1617 0085 00       		.byte	0
 1618 0086 00       		.byte	0
 1619 0087 09       		.uleb128 0x9
 1620 0088 05       		.uleb128 0x5
 1621 0089 00       		.byte	0
 1622 008a 03       		.uleb128 0x3
 1623 008b 0E       		.uleb128 0xe
 1624 008c 3A       		.uleb128 0x3a
 1625 008d 0B       		.uleb128 0xb
 1626 008e 3B       		.uleb128 0x3b
 1627 008f 05       		.uleb128 0x5
 1628 0090 49       		.uleb128 0x49
 1629 0091 13       		.uleb128 0x13
 1630 0092 02       		.uleb128 0x2
 1631 0093 18       		.uleb128 0x18
 1632 0094 00       		.byte	0
 1633 0095 00       		.byte	0
 1634 0096 0A       		.uleb128 0xa
 1635 0097 34       		.uleb128 0x34
 1636 0098 00       		.byte	0
 1637 0099 03       		.uleb128 0x3
 1638 009a 0E       		.uleb128 0xe
 1639 009b 3A       		.uleb128 0x3a
 1640 009c 0B       		.uleb128 0xb
 1641 009d 3B       		.uleb128 0x3b
 1642 009e 05       		.uleb128 0x5
 1643 009f 49       		.uleb128 0x49
 1644 00a0 13       		.uleb128 0x13
 1645 00a1 02       		.uleb128 0x2
 1646 00a2 18       		.uleb128 0x18
 1647 00a3 00       		.byte	0
 1648 00a4 00       		.byte	0
 1649 00a5 0B       		.uleb128 0xb
 1650 00a6 2E       		.uleb128 0x2e
 1651 00a7 01       		.byte	0x1
 1652 00a8 3F       		.uleb128 0x3f
 1653 00a9 19       		.uleb128 0x19
 1654 00aa 03       		.uleb128 0x3
 1655 00ab 0E       		.uleb128 0xe
 1656 00ac 3A       		.uleb128 0x3a
 1657 00ad 0B       		.uleb128 0xb
 1658 00ae 3B       		.uleb128 0x3b
 1659 00af 05       		.uleb128 0x5
 1660 00b0 27       		.uleb128 0x27
 1661 00b1 19       		.uleb128 0x19
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 46


 1662 00b2 49       		.uleb128 0x49
 1663 00b3 13       		.uleb128 0x13
 1664 00b4 11       		.uleb128 0x11
 1665 00b5 01       		.uleb128 0x1
 1666 00b6 12       		.uleb128 0x12
 1667 00b7 06       		.uleb128 0x6
 1668 00b8 40       		.uleb128 0x40
 1669 00b9 18       		.uleb128 0x18
 1670 00ba 9642     		.uleb128 0x2116
 1671 00bc 19       		.uleb128 0x19
 1672 00bd 01       		.uleb128 0x1
 1673 00be 13       		.uleb128 0x13
 1674 00bf 00       		.byte	0
 1675 00c0 00       		.byte	0
 1676 00c1 0C       		.uleb128 0xc
 1677 00c2 2E       		.uleb128 0x2e
 1678 00c3 01       		.byte	0x1
 1679 00c4 3F       		.uleb128 0x3f
 1680 00c5 19       		.uleb128 0x19
 1681 00c6 03       		.uleb128 0x3
 1682 00c7 0E       		.uleb128 0xe
 1683 00c8 3A       		.uleb128 0x3a
 1684 00c9 0B       		.uleb128 0xb
 1685 00ca 3B       		.uleb128 0x3b
 1686 00cb 05       		.uleb128 0x5
 1687 00cc 27       		.uleb128 0x27
 1688 00cd 19       		.uleb128 0x19
 1689 00ce 11       		.uleb128 0x11
 1690 00cf 01       		.uleb128 0x1
 1691 00d0 12       		.uleb128 0x12
 1692 00d1 06       		.uleb128 0x6
 1693 00d2 40       		.uleb128 0x40
 1694 00d3 18       		.uleb128 0x18
 1695 00d4 9642     		.uleb128 0x2116
 1696 00d6 19       		.uleb128 0x19
 1697 00d7 01       		.uleb128 0x1
 1698 00d8 13       		.uleb128 0x13
 1699 00d9 00       		.byte	0
 1700 00da 00       		.byte	0
 1701 00db 0D       		.uleb128 0xd
 1702 00dc 0F       		.uleb128 0xf
 1703 00dd 00       		.byte	0
 1704 00de 0B       		.uleb128 0xb
 1705 00df 0B       		.uleb128 0xb
 1706 00e0 49       		.uleb128 0x49
 1707 00e1 13       		.uleb128 0x13
 1708 00e2 00       		.byte	0
 1709 00e3 00       		.byte	0
 1710 00e4 0E       		.uleb128 0xe
 1711 00e5 26       		.uleb128 0x26
 1712 00e6 00       		.byte	0
 1713 00e7 49       		.uleb128 0x49
 1714 00e8 13       		.uleb128 0x13
 1715 00e9 00       		.byte	0
 1716 00ea 00       		.byte	0
 1717 00eb 0F       		.uleb128 0xf
 1718 00ec 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 47


 1719 00ed 00       		.byte	0
 1720 00ee 3F       		.uleb128 0x3f
 1721 00ef 19       		.uleb128 0x19
 1722 00f0 03       		.uleb128 0x3
 1723 00f1 0E       		.uleb128 0xe
 1724 00f2 3A       		.uleb128 0x3a
 1725 00f3 0B       		.uleb128 0xb
 1726 00f4 3B       		.uleb128 0x3b
 1727 00f5 05       		.uleb128 0x5
 1728 00f6 27       		.uleb128 0x27
 1729 00f7 19       		.uleb128 0x19
 1730 00f8 11       		.uleb128 0x11
 1731 00f9 01       		.uleb128 0x1
 1732 00fa 12       		.uleb128 0x12
 1733 00fb 06       		.uleb128 0x6
 1734 00fc 40       		.uleb128 0x40
 1735 00fd 18       		.uleb128 0x18
 1736 00fe 9642     		.uleb128 0x2116
 1737 0100 19       		.uleb128 0x19
 1738 0101 00       		.byte	0
 1739 0102 00       		.byte	0
 1740 0103 10       		.uleb128 0x10
 1741 0104 34       		.uleb128 0x34
 1742 0105 00       		.byte	0
 1743 0106 03       		.uleb128 0x3
 1744 0107 0E       		.uleb128 0xe
 1745 0108 3A       		.uleb128 0x3a
 1746 0109 0B       		.uleb128 0xb
 1747 010a 3B       		.uleb128 0x3b
 1748 010b 0B       		.uleb128 0xb
 1749 010c 49       		.uleb128 0x49
 1750 010d 13       		.uleb128 0x13
 1751 010e 3F       		.uleb128 0x3f
 1752 010f 19       		.uleb128 0x19
 1753 0110 3C       		.uleb128 0x3c
 1754 0111 19       		.uleb128 0x19
 1755 0112 00       		.byte	0
 1756 0113 00       		.byte	0
 1757 0114 11       		.uleb128 0x11
 1758 0115 34       		.uleb128 0x34
 1759 0116 00       		.byte	0
 1760 0117 03       		.uleb128 0x3
 1761 0118 0E       		.uleb128 0xe
 1762 0119 3A       		.uleb128 0x3a
 1763 011a 0B       		.uleb128 0xb
 1764 011b 3B       		.uleb128 0x3b
 1765 011c 0B       		.uleb128 0xb
 1766 011d 49       		.uleb128 0x49
 1767 011e 13       		.uleb128 0x13
 1768 011f 3F       		.uleb128 0x3f
 1769 0120 19       		.uleb128 0x19
 1770 0121 02       		.uleb128 0x2
 1771 0122 18       		.uleb128 0x18
 1772 0123 00       		.byte	0
 1773 0124 00       		.byte	0
 1774 0125 00       		.byte	0
 1775              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 48


 1776 0000 A4000000 		.4byte	0xa4
 1777 0004 0200     		.2byte	0x2
 1778 0006 00000000 		.4byte	.Ldebug_info0
 1779 000a 04       		.byte	0x4
 1780 000b 00       		.byte	0
 1781 000c 0000     		.2byte	0
 1782 000e 0000     		.2byte	0
 1783 0010 00000000 		.4byte	.LFB1
 1784 0014 E0000000 		.4byte	.LFE1-.LFB1
 1785 0018 00000000 		.4byte	.LFB2
 1786 001c 30000000 		.4byte	.LFE2-.LFB2
 1787 0020 00000000 		.4byte	.LFB3
 1788 0024 48000000 		.4byte	.LFE3-.LFB3
 1789 0028 00000000 		.4byte	.LFB4
 1790 002c 34000000 		.4byte	.LFE4-.LFB4
 1791 0030 00000000 		.4byte	.LFB5
 1792 0034 38000000 		.4byte	.LFE5-.LFB5
 1793 0038 00000000 		.4byte	.LFB6
 1794 003c 40000000 		.4byte	.LFE6-.LFB6
 1795 0040 00000000 		.4byte	.LFB7
 1796 0044 50000000 		.4byte	.LFE7-.LFB7
 1797 0048 00000000 		.4byte	.LFB8
 1798 004c 3C000000 		.4byte	.LFE8-.LFB8
 1799 0050 00000000 		.4byte	.LFB9
 1800 0054 34000000 		.4byte	.LFE9-.LFB9
 1801 0058 00000000 		.4byte	.LFB10
 1802 005c 36000000 		.4byte	.LFE10-.LFB10
 1803 0060 00000000 		.4byte	.LFB11
 1804 0064 24000000 		.4byte	.LFE11-.LFB11
 1805 0068 00000000 		.4byte	.LFB12
 1806 006c 1C000000 		.4byte	.LFE12-.LFB12
 1807 0070 00000000 		.4byte	.LFB13
 1808 0074 20000000 		.4byte	.LFE13-.LFB13
 1809 0078 00000000 		.4byte	.LFB14
 1810 007c 3C000000 		.4byte	.LFE14-.LFB14
 1811 0080 00000000 		.4byte	.LFB15
 1812 0084 7C000000 		.4byte	.LFE15-.LFB15
 1813 0088 00000000 		.4byte	.LFB16
 1814 008c 4C000000 		.4byte	.LFE16-.LFB16
 1815 0090 00000000 		.4byte	.LFB17
 1816 0094 10000000 		.4byte	.LFE17-.LFB17
 1817 0098 00000000 		.4byte	.LFB18
 1818 009c 0E000000 		.4byte	.LFE18-.LFB18
 1819 00a0 00000000 		.4byte	0
 1820 00a4 00000000 		.4byte	0
 1821              		.section	.debug_ranges,"",%progbits
 1822              	.Ldebug_ranges0:
 1823 0000 00000000 		.4byte	.LFB1
 1824 0004 E0000000 		.4byte	.LFE1
 1825 0008 00000000 		.4byte	.LFB2
 1826 000c 30000000 		.4byte	.LFE2
 1827 0010 00000000 		.4byte	.LFB3
 1828 0014 48000000 		.4byte	.LFE3
 1829 0018 00000000 		.4byte	.LFB4
 1830 001c 34000000 		.4byte	.LFE4
 1831 0020 00000000 		.4byte	.LFB5
 1832 0024 38000000 		.4byte	.LFE5
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 49


 1833 0028 00000000 		.4byte	.LFB6
 1834 002c 40000000 		.4byte	.LFE6
 1835 0030 00000000 		.4byte	.LFB7
 1836 0034 50000000 		.4byte	.LFE7
 1837 0038 00000000 		.4byte	.LFB8
 1838 003c 3C000000 		.4byte	.LFE8
 1839 0040 00000000 		.4byte	.LFB9
 1840 0044 34000000 		.4byte	.LFE9
 1841 0048 00000000 		.4byte	.LFB10
 1842 004c 36000000 		.4byte	.LFE10
 1843 0050 00000000 		.4byte	.LFB11
 1844 0054 24000000 		.4byte	.LFE11
 1845 0058 00000000 		.4byte	.LFB12
 1846 005c 1C000000 		.4byte	.LFE12
 1847 0060 00000000 		.4byte	.LFB13
 1848 0064 20000000 		.4byte	.LFE13
 1849 0068 00000000 		.4byte	.LFB14
 1850 006c 3C000000 		.4byte	.LFE14
 1851 0070 00000000 		.4byte	.LFB15
 1852 0074 7C000000 		.4byte	.LFE15
 1853 0078 00000000 		.4byte	.LFB16
 1854 007c 4C000000 		.4byte	.LFE16
 1855 0080 00000000 		.4byte	.LFB17
 1856 0084 10000000 		.4byte	.LFE17
 1857 0088 00000000 		.4byte	.LFB18
 1858 008c 0E000000 		.4byte	.LFE18
 1859 0090 00000000 		.4byte	0
 1860 0094 00000000 		.4byte	0
 1861              		.section	.debug_line,"",%progbits
 1862              	.Ldebug_line0:
 1863 0000 FE010000 		.section	.debug_str,"MS",%progbits,1
 1863      02005400 
 1863      00000201 
 1863      FB0E0D00 
 1863      01010101 
 1864              	.LASF6:
 1865 0000 6C6F6E67 		.ascii	"long long int\000"
 1865      206C6F6E 
 1865      6720696E 
 1865      7400
 1866              	.LASF55:
 1867 000e 433A5C55 		.ascii	"C:\\Users\\marlokistvan\\Documents\\PSoC Creator\\t"
 1867      73657273 
 1867      5C6D6172 
 1867      6C6F6B69 
 1867      73747661 
 1868 003c 646D2E63 		.ascii	"dm.cydsn\000"
 1868      7964736E 
 1868      00
 1869              	.LASF16:
 1870 0045 72656733 		.ascii	"reg32\000"
 1870      3200
 1871              	.LASF54:
 1872 004b 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1872      72617465 
 1872      645F536F 
 1872      75726365 
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 50


 1872      5C50536F 
 1873              	.LASF51:
 1874 006e 55415254 		.ascii	"UART_IntrTxMask\000"
 1874      5F496E74 
 1874      7254784D 
 1874      61736B00 
 1875              	.LASF23:
 1876 007e 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1876      5F556172 
 1876      74536574 
 1876      52784164 
 1876      64726573 
 1877              	.LASF34:
 1878 0098 6C657665 		.ascii	"level\000"
 1878      6C00
 1879              	.LASF42:
 1880 009e 55415254 		.ascii	"UART_UartDisableCts\000"
 1880      5F556172 
 1880      74446973 
 1880      61626C65 
 1880      43747300 
 1881              	.LASF31:
 1882 00b2 55415254 		.ascii	"UART_UartSetRtsPolarity\000"
 1882      5F556172 
 1882      74536574 
 1882      52747350 
 1882      6F6C6172 
 1883              	.LASF3:
 1884 00ca 73686F72 		.ascii	"short unsigned int\000"
 1884      7420756E 
 1884      7369676E 
 1884      65642069 
 1884      6E7400
 1885              	.LASF37:
 1886 00dd 73747269 		.ascii	"string\000"
 1886      6E6700
 1887              	.LASF36:
 1888 00e4 55415254 		.ascii	"UART_UartPutString\000"
 1888      5F556172 
 1888      74507574 
 1888      53747269 
 1888      6E6700
 1889              	.LASF45:
 1890 00f7 62726561 		.ascii	"breakWidth\000"
 1890      6B576964 
 1890      746800
 1891              	.LASF44:
 1892 0102 55415254 		.ascii	"UART_UartSendBreakBlocking\000"
 1892      5F556172 
 1892      7453656E 
 1892      64427265 
 1892      616B426C 
 1893              	.LASF47:
 1894 011d 7478496E 		.ascii	"txIntrReg\000"
 1894      74725265 
 1894      6700
 1895              	.LASF1:
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 51


 1896 0127 756E7369 		.ascii	"unsigned char\000"
 1896      676E6564 
 1896      20636861 
 1896      7200
 1897              	.LASF33:
 1898 0135 55415254 		.ascii	"UART_UartSetRtsFifoLevel\000"
 1898      5F556172 
 1898      74536574 
 1898      52747346 
 1898      69666F4C 
 1899              	.LASF14:
 1900 014e 63686172 		.ascii	"char8\000"
 1900      3800
 1901              	.LASF20:
 1902 0154 55415254 		.ascii	"UART_UartPostEnable\000"
 1902      5F556172 
 1902      74506F73 
 1902      74456E61 
 1902      626C6500 
 1903              	.LASF5:
 1904 0168 6C6F6E67 		.ascii	"long unsigned int\000"
 1904      20756E73 
 1904      69676E65 
 1904      6420696E 
 1904      7400
 1905              	.LASF21:
 1906 017a 55415254 		.ascii	"UART_UartStop\000"
 1906      5F556172 
 1906      7453746F 
 1906      7000
 1907              	.LASF9:
 1908 0188 75696E74 		.ascii	"uint8\000"
 1908      3800
 1909              	.LASF39:
 1910 018e 55415254 		.ascii	"UART_UartPutCRLF\000"
 1910      5F556172 
 1910      74507574 
 1910      43524C46 
 1910      00
 1911              	.LASF29:
 1912 019f 55415254 		.ascii	"UART_UartGetByte\000"
 1912      5F556172 
 1912      74476574 
 1912      42797465 
 1912      00
 1913              	.LASF53:
 1914 01b0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1914      43313120 
 1914      352E342E 
 1914      31203230 
 1914      31363036 
 1915 01e3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1915      20726576 
 1915      6973696F 
 1915      6E203233 
 1915      37373135 
 1916 0216 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 52


 1916      66756E63 
 1916      74696F6E 
 1916      2D736563 
 1916      74696F6E 
 1917              	.LASF27:
 1918 023e 72784461 		.ascii	"rxData\000"
 1918      746100
 1919              	.LASF25:
 1920 0245 61646472 		.ascii	"addressMask\000"
 1920      6573734D 
 1920      61736B00 
 1921              	.LASF13:
 1922 0251 646F7562 		.ascii	"double\000"
 1922      6C6500
 1923              	.LASF22:
 1924 0258 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1924      5F556172 
 1924      74536574 
 1924      52784164 
 1924      64726573 
 1925              	.LASF32:
 1926 026e 706F6C61 		.ascii	"polarity\000"
 1926      72697479 
 1926      00
 1927              	.LASF10:
 1928 0277 75696E74 		.ascii	"uint16\000"
 1928      313600
 1929              	.LASF11:
 1930 027e 75696E74 		.ascii	"uint32\000"
 1930      333200
 1931              	.LASF8:
 1932 0285 756E7369 		.ascii	"unsigned int\000"
 1932      676E6564 
 1932      20696E74 
 1932      00
 1933              	.LASF19:
 1934 0292 55415254 		.ascii	"UART_UartInit\000"
 1934      5F556172 
 1934      74496E69 
 1934      7400
 1935              	.LASF24:
 1936 02a0 61646472 		.ascii	"address\000"
 1936      65737300 
 1937              	.LASF7:
 1938 02a8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1938      206C6F6E 
 1938      6720756E 
 1938      7369676E 
 1938      65642069 
 1939              	.LASF50:
 1940 02bf 55415254 		.ascii	"UART_UART_WAKEUP_ISR\000"
 1940      5F554152 
 1940      545F5741 
 1940      4B455550 
 1940      5F495352 
 1941              	.LASF49:
 1942 02d4 55415254 		.ascii	"UART_UartRestoreConfig\000"
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 53


 1942      5F556172 
 1942      74526573 
 1942      746F7265 
 1942      436F6E66 
 1943              	.LASF38:
 1944 02eb 62756649 		.ascii	"bufIndex\000"
 1944      6E646578 
 1944      00
 1945              	.LASF28:
 1946 02f4 55415254 		.ascii	"UART_UartGetChar\000"
 1946      5F556172 
 1946      74476574 
 1946      43686172 
 1946      00
 1947              	.LASF18:
 1948 0305 73697A65 		.ascii	"sizetype\000"
 1948      74797065 
 1948      00
 1949              	.LASF40:
 1950 030e 74784461 		.ascii	"txDataByte\000"
 1950      74614279 
 1950      746500
 1951              	.LASF41:
 1952 0319 55415254 		.ascii	"UART_UartEnableCts\000"
 1952      5F556172 
 1952      74456E61 
 1952      626C6543 
 1952      747300
 1953              	.LASF15:
 1954 032c 63686172 		.ascii	"char\000"
 1954      00
 1955              	.LASF52:
 1956 0331 55415254 		.ascii	"UART_skipStart\000"
 1956      5F736B69 
 1956      70537461 
 1956      727400
 1957              	.LASF2:
 1958 0340 73686F72 		.ascii	"short int\000"
 1958      7420696E 
 1958      7400
 1959              	.LASF43:
 1960 034a 55415254 		.ascii	"UART_UartSetCtsPolarity\000"
 1960      5F556172 
 1960      74536574 
 1960      43747350 
 1960      6F6C6172 
 1961              	.LASF4:
 1962 0362 6C6F6E67 		.ascii	"long int\000"
 1962      20696E74 
 1962      00
 1963              	.LASF30:
 1964 036b 746D7053 		.ascii	"tmpStatus\000"
 1964      74617475 
 1964      7300
 1965              	.LASF26:
 1966 0375 6D617463 		.ascii	"matchReg\000"
 1966      68526567 
ARM GAS  C:\Users\MARLOK~1\AppData\Local\Temp\cctKPwBQ.s 			page 54


 1966      00
 1967              	.LASF17:
 1968 037e 6C6F6E67 		.ascii	"long double\000"
 1968      20646F75 
 1968      626C6500 
 1969              	.LASF12:
 1970 038a 666C6F61 		.ascii	"float\000"
 1970      7400
 1971              	.LASF0:
 1972 0390 7369676E 		.ascii	"signed char\000"
 1972      65642063 
 1972      68617200 
 1973              	.LASF48:
 1974 039c 55415254 		.ascii	"UART_UartSaveConfig\000"
 1974      5F556172 
 1974      74536176 
 1974      65436F6E 
 1974      66696700 
 1975              	.LASF46:
 1976 03b0 74784374 		.ascii	"txCtrlReg\000"
 1976      726C5265 
 1976      6700
 1977              	.LASF35:
 1978 03ba 75617274 		.ascii	"uartFlowCtrl\000"
 1978      466C6F77 
 1978      4374726C 
 1978      00
 1979              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
